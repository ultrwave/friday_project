{"version":3,"sources":["common/styles/Common.module.css","content/styles/Login.module.css","content/styles/Registration.module.css","content/styles/CardsPage.module.css","common/SuperInputText/SuperInputText.module.css","content/styles/Profile.module.css","common/styles/Navbar.module.css","content/styles/Recover.module.css","common/styles/NavbarItem.module.css","common/SuperButton/SuperButton.module.css","common/SuperCheckbox/SuperCheckbox.module.css","common/Search/NameFilterComponent.module.css","common/loader/loader.module.css","App.module.css","common/styles/PaginationDisplay.module.css","content/styles/Page404.module.css","content/styles/LearnPage.module.css","common/images/default_avatar.png","api/API.ts","redux/app-reducer.ts","redux/auth-reducer.ts","content/Profile/Profile.tsx","common/NavbarItem.tsx","common/images/cards_logo.png","common/Navbar.tsx","common/SuperButton/SuperButton.tsx","common/SuperInputText/SuperInputText.tsx","common/SuperCheckbox/SuperCheckbox.tsx","common/Search/NameFilterComponent.tsx","redux/search-reducer.ts","common/Search/SearchContainer.tsx","common/Pagination/PaginationDisplay.tsx","redux/pagination-reducer.ts","common/Pagination/PaginationContainer.tsx","common/modals/Modal.tsx","common/modals/ModalContainer.tsx","common/modals/input/InputMap.tsx","common/modals/input/ModalInput.tsx","common/modals/input/ModalInputContainer.tsx","common/modals/question/ModalQuestion.tsx","common/modals/question/ModalQuestionContainer.tsx","content/SuperInputsDemo.tsx","common/inputValidator.ts","content/Login/Login.tsx","content/Login/LoginContainer.tsx","content/Recover/RecoverTimer.tsx","redux/recover-reducer.ts","content/Recover/Recover.tsx","content/Recover/RecoverContainer.tsx","content/NewPassword/NewPassword.tsx","content/NewPassword/NewPasswordContainer.tsx","common/loader/loader.svg","common/loader/loader.tsx","content/Registration/Registration2.tsx","common/registrationInputValidator.ts","redux/registration-reducer.ts","content/Registration/RegistrationContainer.tsx","content/CardsPage/CardItem.tsx","redux/cards-reducer.ts","content/CardsPage/CardsPage.tsx","content/CardsPage/CardsPageContainer.tsx","common/modals/input2/ModalInput2.tsx","common/modals/input2/ModalInputContainer2.tsx","content/PacksPage/PackItem.tsx","redux/packs-reducer.ts","content/PacksPage/PacksPage.tsx","content/PacksPage/PacksPageContainer.tsx","content/Page404/Page404.tsx","content/LearnPage/LearnPage.tsx","redux/learn-reducer.ts","content/LearnPage/LearnPageContainer.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","content/styles/PacksPage.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","API","post","then","response","data","email","password","rememberMe","delete","from","message","resetPasswordToken","packsAPI","params","get","name","cardsPack","id","newName","put","_id","cardsAPI","card","question","card_id","grade","updatedGrade","initialState","status","isInitialized","SET_APP_STATUS","setAppStatusAC","type","SET_IS_LOGGED_IN","SET_PROFILE","isLoggedIn","profile","setIsLoggedInAC","setProfileAC","setAuthTC","dispatch","catch","e","console","log","finally","logOutTC","Profile","useDispatch","useSelector","state","auth","profileData","className","appStyle","defaultTitle","style","title","avatar","src","alt","width","height","defaultAvatar","packsCount","publicCardPacksCount","defaultButton","onClick","to","NavbarItem","props","item","activeClassName","activeLink","Navbar","navbar","logo","menu","logoutButton","SuperButton","red","restProps","finalClassName","s","default","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","inputItem","currentTarget","value","key","inputErrorMessageArea","SuperCheckbox","onChangeChecked","children","checkbox","checked","NameFilterComponent","onChangeHandler","onClearHandler","placeholder","searchComponent","input","SET_SEARCH_FILTERS_VALUE","nameFilter","onlyMyPacks","setFiltersAC","searchObject","payload","SearchContainer","useState","searchState","setSearchState","searchValue","htmlFor","marginLeft","PaginationDisplay","currentPage","totalItems","itemsOnPage","getPage","getItemsOnPage","pages","lastPage","Math","ceil","i","push","background","undefined","color","main","Number","SET_CURRENT_PAGE","SET_ITEMS_ON_PAGE","page","pageCount","PaginationContainer","paginationState","pagination","Modal","enableBackground","backgroundStyle","backgroundOnClick","modalStyle","modalOnClick","show","useEffect","document","body","overflowY","top","left","position","opacity","zIndex","display","flexFlow","alignItems","justifyContent","ModalContainer","setShow","modalText","marginTop","buttonText","InputMap","inputData","setSaveInputs","inputStyles","defAnswersData","useMemo","map","iD","setValue","modalInputData","setModalInputData","f","successCloseModal","ModalInput","answer","setAnswer","inputContainerStyles","buttonStyles","button","close","answerData","setAnswerData","saveInputs","ModalInputContainer","defaultAnswer","value1","setValue1","value2","setValue2","modalInputProps","answerCallback","inputsCount","buttonTitle","ModalQuestion","setTrue","setFalse","trueStyles","falseStyles","buttonTrue","buttonFalse","ModalQuestionContainer","isMine","disabled","SuperInputsDemo","text","setText","showAlert","alert","setChecked","demoContainer","green","inputValidator","test","Login","formState","onBlurHandler","checkBoxHandler","onSubmitHandler","disableSubmit","globalFormError","pageContainer","form","onSubmit","preventDefault","onBlur","DEV_MODE","messageDefault","credentialsContainer","credentialsString","credentialsTitle","credentialsValue","DEFAULT_EMAIL","DEFAULT_PASSWORD","LoginContainer","touched","setFormState","field","trim","target","login","logInTC","RecoverTimer","getTime","hideTimer","timeMs","setTimeMs","timerID","setInterval","clearInterval","timer","ms","seconds","floor","convertMsToTime","timerIsOn","TOGGLE_TIMER_STATUS","toggleTimerAC","Recover","localStorage","timerData","Date","now","pageRecover","timerContainer","setItem","RecoverContainer","baseUrl","window","location","origin","recoverPasswordTC","NewPassword","formError","confirm","NewPasswordContainer","useParams","token","history","replaceState","setNewPasswordTC","Loader","dimScreen","loader","Registration2","registrationFormState","password2","errorResponse","stopPropagation","registrationErrorMessage","container","submitButton","registrationInputValidator","password1","SET_SUCCESSFULLY_REGISTERED","isSuccessfullyRegistered","setSuccessfullyRegisteredAC","successfullyRegistered","RegistrationContainer","pageRegistration","setRegistrationFormState","registrationTC","CardItem","myId","itemIsMine","user_id","updated","toLocaleDateString","hour12","hour","minute","created","packItem","itemIsNotMine","round","EPSILON","fontSize","deleteCallback","updateCallback","packTitle","cards","totalCardsCount","itemsPerPage","sortCards","setCardsAC","setTotalCardsCountAC","getCardsTC","packId","getState","cardsPage","cardsTotalCount","deleteCardTC","cardId","CardsPage","filter","filterState","sort","c","includes","deleteCard","updateCard","cardsPageWrapper","pageTitle","controlsContainer","alignSelf","marginBottom","table","tableHeader","sortSettings","activeSetting","createCard","CardsPageContainer","appStatus","appState","pagesCount","cardsPack_id","createCardTC","update","updateCardTC","ModalInput2","answers","answer1","answer2","answer3","ModalInputContainer2","defaultAnswers","setAnswers","PackItem","delay","setDelay","setTimeout","cardsCount","user_name","paddingLeft","flexDirection","encodeURI","packs","totalPacksCount","sortPacks","getPacksTC","packsPage","packName","cardPacks","cardPacksTotalCount","PacksPage","hide","crSorting","slice","toggleHideInput","p","packsRender","deletePack","updatePack","setSort","setSortPacksAC","packsPageWrapper","createPack","inputBlock","addButton","PacksPageContainer","packNameFilter","createPackTC","deletePackTC","updatePackTC","Page404","page404","LearnPage","amount","index","smartMode","toggleMode","getNextCard","setGrade","answerHandler","modeTitle","marginRight","packEmpty","lastCard","cardContainer","answerContainer","buttonsBlock","answerButton","highlightAnswer","border","checkButton","nextButton","cardIndex","LearnPageContainer","setIndex","setMode","length","m","sum","reduce","acc","rand","random","res","newSum","updateCardGradeAC","sendGradeTC","App","content","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","learnPage","composeEnhancers","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6a5d69b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultTitle\":\"Common_defaultTitle__31EcN\",\"defaultButton\":\"Common_defaultButton__3Nyzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"Login_pageContainer__UVIWV\",\"form\":\"Login_form__32Fyg\",\"rememberMe\":\"Login_rememberMe__dRVr8\",\"messageDefault\":\"Login_messageDefault__3l_EJ\",\"credentialsContainer\":\"Login_credentialsContainer__R7oM-\",\"credentialsString\":\"Login_credentialsString__5M3DA\",\"credentialsTitle\":\"Login_credentialsTitle__2-ZDZ\",\"credentialsValue\":\"Login_credentialsValue__jIh4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"Registration_pageContainer__1KWw0\",\"form\":\"Registration_form__jtTlg\",\"registrationErrorMessage\":\"Registration_registrationErrorMessage__1kz7v\",\"demoContainer\":\"Registration_demoContainer__iUtpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsPageWrapper\":\"CardsPage_cardsPageWrapper__1KtSp\",\"pageTitle\":\"CardsPage_pageTitle__CfxOj\",\"controlsContainer\":\"CardsPage_controlsContainer__y5nwQ\",\"table\":\"CardsPage_table__2DQ55\",\"sortSettings\":\"CardsPage_sortSettings__221op\",\"activeSetting\":\"CardsPage_activeSetting__1h9bN\",\"tableHeader\":\"CardsPage_tableHeader__fVl_U\",\"packItem\":\"CardsPage_packItem__3ccLB\",\"inputBlock\":\"CardsPage_inputBlock__1pJDB\",\"itemIsNotMine\":\"CardsPage_itemIsNotMine__vk-Xv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputItem\":\"SuperInputText_inputItem__3wSqk\",\"superInput\":\"SuperInputText_superInput__2y9o7\",\"errorInput\":\"SuperInputText_errorInput__1Tk9e\",\"error\":\"SuperInputText_error__1l5Oe\",\"inputErrorMessageArea\":\"SuperInputText_inputErrorMessageArea__1dWI0\",\"title\":\"SuperInputText_title__2upz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Profile_title__F93Aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2UpRR\",\"menu\":\"Navbar_menu___OZdZ\",\"logo\":\"Navbar_logo__2Y1Zc\",\"logoutButton\":\"Navbar_logoutButton__OhV8V\",\"navbarItem\":\"Navbar_navbarItem__34Lgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Recover_form__DGr-v\",\"timer\":\"Recover_timer__2fP7Q\",\"timerContainer\":\"Recover_timerContainer__20gB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavbarItem_item__2LJ8k\",\"activeLink\":\"NavbarItem_activeLink__3JfRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1H4I9\",\"red\":\"SuperButton_red__1KP2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__7ru_C\",\"spanClassName\":\"SuperCheckbox_spanClassName__3VuGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchComponent\":\"NameFilterComponent_searchComponent__2XuZf\",\"input\":\"NameFilterComponent_input__2j-G7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dimScreen\":\"loader_dimScreen__Ia0cI\",\"loader\":\"loader_loader__3hg5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3lkBD\",\"content\":\"App_content__XgHZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PaginationDisplay_main__2kxec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404\":\"Page404_page404__1B52C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"LearnPage_pageContainer__Tw53u\",\"modeTitle\":\"LearnPage_modeTitle__3ngue\",\"cardsCount\":\"LearnPage_cardsCount__BmnuJ\",\"lastCard\":\"LearnPage_lastCard__1PmmU\",\"packEmpty\":\"LearnPage_packEmpty__16T4G\",\"cardContainer\":\"LearnPage_cardContainer__3VRkS\",\"card\":\"LearnPage_card__26Yo9\",\"question\":\"LearnPage_question__2wFZO\",\"answer\":\"LearnPage_answer__1birh\",\"delete\":\"LearnPage_delete__2WO_k\",\"answerButton\":\"LearnPage_answerButton__2Ql9m\",\"buttonsBlock\":\"LearnPage_buttonsBlock__3cN5_\",\"checkButton\":\"LearnPage_checkButton__gb5re\",\"highlightAnswer\":\"LearnPage_highlightAnswer__1urSl\",\"nextButton\":\"LearnPage_nextButton__AeOjI\"};","export default __webpack_public_path__ + \"static/media/default_avatar.b82381d7.png\";","import axios from 'axios';\r\nimport {GetPacksParamsType} from '../redux/packs-reducer';\r\nimport {GetCardsParamsType} from '../redux/cards-reducer';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    headers: {}\r\n})\r\n\r\nexport const API = {\r\n    me() {\r\n        return instance.post('/auth/me')\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post('/auth/login', {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    },\r\n    forgot(email: string, from: string, message: string) {\r\n        return instance.post('/auth/forgot', {email, from, message})\r\n    },\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post('/auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n    registration(email: string, password: string) {\r\n        return instance.post('/auth/register', {email, password})\r\n    },\r\n}\r\n\r\nexport const packsAPI = {\r\n    getPacks(params: GetPacksParamsType) {\r\n        return instance.get('/cards/pack', {params})\r\n            .then(response => response.data)\r\n    },\r\n    createPack(name: string) {\r\n        return instance.post('/cards/pack', {cardsPack: {name}})\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete(`/cards/pack?id=${id}`)\r\n    },\r\n    updatePack(id: string, newName: string) {\r\n        return instance.put('/cards/pack', {cardsPack: {_id: id, name: newName}})\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(id: string, params: GetCardsParamsType) { // todo - fix params\r\n        return instance.get(`/cards/card?cardsPack_id=${id}`, {params})\r\n            .then(response => response.data)\r\n    },\r\n    createCard(data: CreateCardType) {\r\n        return instance.post('/cards/card', {card: data})\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete(`/cards/card?id=${id}`)\r\n    },\r\n    updateCard(id: string) {\r\n        return instance.put('/cards/card', {card: {_id: id, question: 'updated'}})\r\n    },\r\n    sendGrade(card_id: string, grade: number) {\r\n        return instance.put('/cards/grade', {card_id, grade})\r\n            .then(response => response.data.updatedGrade)\r\n        return instance.put('/cards/card', {card: {_id: card_id, question: 'updated'}})\r\n    }\r\n}\r\n\r\n\r\nexport type GetPacksResponseType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    name: string\r\n    path: string // папка\r\n    cardsCount: number\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: 'pack' // ещё будет \"folder\" (папка)\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type CreatePackType = { // todo - оранж поля?\r\n    name?: string // если не отправить будет таким\r\n    path?: string // если не отправить будет такой\r\n    grade?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    deckCover?: string // не обязателен\r\n    private?: boolean // если не отправить будет такой\r\n    type?: string // если не отправить будет таким\r\n}\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CreateCardType = {\r\n    answer?: string // если не отправить будет таким\r\n    question?: string // если не отправить будет таким\r\n    cardsPack_id?: string\r\n    grade?: number // 0..5, не обязателен\r\n    rating?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    type?: string // если не отправить будет таким\r\n    answerImg?: string // не обязателен\r\n    questionImg?: string // не обязателен\r\n    questionVideo?: string // не обязателен\r\n    answerVideo?: string // не обязателен\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}","\r\nexport type InitialStateType = {\r\n    status: AppStatusType\r\n    isInitialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'loading',\r\n    isInitialized: false\r\n}\r\nexport type AppStatusType = 'idle' | 'loading' | 'sending' | 'failed'\r\n\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setAppStatusAC>\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_APP_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst SET_APP_STATUS = 'SET-APP-STATUS'\r\n\r\nexport const setAppStatusAC = (status: AppStatusType) => ({\r\n        type: SET_APP_STATUS,\r\n        status\r\n    }\r\n)","import store from './store';\r\nimport {API} from '../api/API';\r\nimport {setAppStatusAC} from './app-reducer';\r\n\r\nconst SET_IS_LOGGED_IN = 'SET-IS-LOGGED-IN'\r\nconst SET_PROFILE = 'SET-PROFILE'\r\n\r\ntype PageStateType = {\r\n    isLoggedIn: boolean\r\n    profile: AuthProfileType | null\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    isLoggedIn: false,\r\n    profile: null\r\n}\r\n\r\nexport type AuthProfileType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nexport type DispatchType = typeof store.dispatch\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setProfileAC>\r\n\r\nexport const authReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n\r\n        case SET_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setIsLoggedInAC = (isLoggedIn: boolean) => ({\r\n        type: SET_IS_LOGGED_IN,\r\n        isLoggedIn\r\n    } as const\r\n)\r\n\r\nconst setProfileAC = (profile: AuthProfileType) => ({\r\n    type: SET_PROFILE,\r\n    profile\r\n}) as const\r\n\r\n// Thunks\r\n\r\nexport const setAuthTC = () => (dispatch: DispatchType) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    API.me()\r\n        .then((response) => {\r\n            dispatch(setProfileAC(response))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch(e => {\r\n            console.log('Error: ', {...e})\r\n            dispatch(setIsLoggedInAC(false))\r\n        })\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n\r\nexport const logInTC = (login: string, password: string, rememberMe: boolean) => (dispatch: DispatchType) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    API.login(login, password, rememberMe)\r\n        .then((response) => {\r\n            dispatch(setProfileAC(response))\r\n            dispatch(setIsLoggedInAC(true))\r\n        })\r\n        .catch(e => console.log('Error: ', {...e}))\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n\r\nexport const logOutTC = () => (dispatch: DispatchType) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    API.logout()\r\n        .then(response => {\r\n            dispatch(setIsLoggedInAC(false))\r\n        })\r\n        .catch(e => console.log('Error: ', {...e}))\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => (dispatch: DispatchType) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    API.setNewPassword(password, resetPasswordToken)\r\n        .then(response => {\r\n            dispatch(setIsLoggedInAC(false))\r\n        })\r\n        .catch(e => console.log('Error: ', {...e}))\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from '../styles/Profile.module.css'\r\nimport appStyle from '../../common/styles/Common.module.css'\r\nimport defaultAvatar from '../../common/images/default_avatar.png';\r\nimport {AuthProfileType, logOutTC} from '../../redux/auth-reducer';\r\n\r\nfunction Profile() {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: RootStateType): boolean => state.auth.isLoggedIn)\r\n    const profileData = useSelector((state: RootStateType): AuthProfileType | null => state.auth.profile)\r\n\r\n    const logoutHandler = () => dispatch(logOutTC())\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={`${appStyle.defaultTitle} ${style.title}`}>\r\n                Profile\r\n            </h1>\r\n            {\r\n                isLoggedIn && profileData\r\n                    ? <div className={style.profileData}>\r\n                        {profileData.avatar ?\r\n                            <div>\r\n                                <img src={profileData.avatar} alt=\"\" width=\"100\" height=\"\"></img>\r\n                            </div>\r\n                            : <img src={defaultAvatar} alt=\"\" width=\"100\" height=\"100\"/>\r\n                        }\r\n                        <div className={style.name}>Name: {profileData.name}</div>\r\n                        <div className={style.email}>email: {profileData.email}</div>\r\n                        <div className={style.packsCount}>Public card packs\r\n                            count: {profileData.publicCardPacksCount}</div>\r\n\r\n                        {/*<div className={style.name}>{profile.data.name}</div>*/}\r\n                        {/*<div className={style.name}>{userName}</div>*/}\r\n                        <button className={appStyle.defaultButton} onClick={logoutHandler}>Log out</button>\r\n                    </div>\r\n                    : <Redirect to={'/login'}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './styles/NavbarItem.module.css'\r\n\r\ntype NavbarItemPropsType = {\r\n    to: string\r\n    title: string\r\n}\r\n\r\nexport function NavbarItem(props: NavbarItemPropsType) {\r\n    return (\r\n        <div className={style.item}>\r\n            <NavLink to={props.to} activeClassName={style.activeLink}>\r\n                {props.title}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/cards_logo.b892f089.png\";","import React from 'react';\r\nimport style from './styles/Navbar.module.css'\r\nimport {NavbarItem} from './NavbarItem';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../redux/store';\r\nimport {logOutTC} from '../redux/auth-reducer';\r\nimport logo from '../common/images/cards_logo.png'\r\n\r\nexport function Navbar() {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: RootStateType) => state.auth.isLoggedIn)\r\n    const logout = () => dispatch(logOutTC())\r\n\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <img src={logo} className={style.logo} alt=\"logo\"/>\r\n            <div className={style.menu}>\r\n                {!isLoggedIn && <NavbarItem to='/registration2' title='Registration'/>}\r\n                <NavbarItem to='/profile' title='Profile'/>\r\n                <NavbarItem to='/set-new-password' title='Password'/>\r\n                <NavbarItem to='/recover' title='Recover Pass'/>\r\n                <NavbarItem to='/packs' title='Packs'/>\r\n                <NavbarItem to='/cards' title='Cards'/>\r\n                <NavbarItem to='/demo' title='Demo'/>\r\n                {isLoggedIn\r\n                    ? <button className={style.logoutButton} onClick={logout}>Logout</button>\r\n                    : <span className={style.logoutButton}><NavbarItem to='/login' title='Login'/></span>\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором хранится название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n  //console.log(restProps);\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    />\r\n  );\r\n};\r\n\r\nexport default SuperButton;\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent\r\n} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  onChange,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n  title,\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e); // если есть пропс onChange // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    e.key === \"Enter\" && // если нажата кнопка Enter\r\n    onEnter && // и есть пропс onEnter\r\n      onEnter(); // то вызвать его\r\n  };\r\n  // console.log(className);\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  const finalInputClassName = `${\r\n    error ? s.errorInput : s.superInput\r\n  } ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n  return (\r\n    <div className={s.inputItem}>\r\n      {title && <div className={s.title}>{title}</div>}\r\n      <input\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      <div className={s.inputErrorMessageArea}>\r\n      {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  InputHTMLAttributes\r\n} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    // сделайте так чтоб работал onChange и onChangeChecked\r\n    onChange && onChange(e);\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  };\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type={\"checkbox\"}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  );\r\n};\r\n\r\nexport default SuperCheckbox;\r\n","import React from 'react';\r\nimport s from './NameFilterComponent.module.css';\r\n\r\ntype searchFieldType = {\r\n    value: string\r\n    onChangeHandler(value: string): void\r\n    onClearHandler(): void\r\n    placeholder?: string\r\n}\r\n\r\n\r\nfunction NameFilterComponent({value, onChangeHandler, onClearHandler, placeholder= 'Filter by name'}: searchFieldType) {\r\n    const handleKeyPress = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchComponent}>\r\n            <input\r\n                type='text' className={s.input} value={value}\r\n                onChange={(e) => onChangeHandler(e.currentTarget.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder={placeholder}\r\n            />\r\n            <button onClick={onClearHandler}>x</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameFilterComponent;","import {SearchStateType} from \"../common/Search/SearchContainer\";\r\n\r\nconst SET_SEARCH_FILTERS_VALUE = 'SET_SEARCH_FILTERS_VALUE';\r\n\r\nexport type InitialStateType = {\r\n    nameFilter: string\r\n    onlyMyPacks: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    nameFilter: \"\",\r\n    onlyMyPacks: false\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setFiltersAC>\r\n\r\nexport const searchReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_SEARCH_FILTERS_VALUE:\r\n            return {\r\n                ...state,\r\n                nameFilter: action.payload.searchObject.nameFilter,\r\n                onlyMyPacks: action.payload.searchObject.onlyMyPacks\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setFiltersAC = (searchObject: SearchStateType) => ({\r\n        type: SET_SEARCH_FILTERS_VALUE,\r\n        payload: {\r\n            searchObject,\r\n        }\r\n    }\r\n)\r\n\r\n","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport NameFilterComponent from \"./NameFilterComponent\";\r\n// import inputValidator from \"../inputValidator\";\r\nimport {setFiltersAC} from \"../../redux/search-reducer\";\r\n\r\nexport type SearchStateType = {\r\n    nameFilter: string\r\n    onlyMyPacks: boolean\r\n}\r\nexport type SearchContainerPropsType = {\r\n    placeholder: string\r\n}\r\n\r\nfunction SearchContainer({placeholder}:SearchContainerPropsType) {\r\n    const dispatch = useDispatch()\r\n    const [searchState, setSearchState] = useState<SearchStateType>(\r\n        {\r\n            nameFilter: \"\",\r\n            onlyMyPacks: true\r\n        }\r\n    )\r\n\r\n    const onChangeHandler = (searchValue: string) => {\r\n        setSearchState({\r\n            ...searchState,\r\n            nameFilter: searchValue,\r\n        })\r\n    }\r\n\r\n    const myPacksHandler = () => {\r\n        setSearchState({\r\n            ...searchState,\r\n            onlyMyPacks: !searchState.onlyMyPacks\r\n        })\r\n        dispatch(setFiltersAC(searchState))\r\n        console.log(searchState)\r\n    }\r\n    const setFiltersHandler = () => {\r\n        dispatch(setFiltersAC(searchState))\r\n    }\r\n\r\n    const onClearHandler = () => {\r\n        setSearchState({\r\n            ...searchState,\r\n            nameFilter: ''\r\n        })\r\n        dispatch(setFiltersAC({\r\n            ...searchState,\r\n            nameFilter: ''\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NameFilterComponent\r\n                value={searchState.nameFilter}\r\n                onChangeHandler={onChangeHandler}\r\n                //onSubmitHandler={(onSubmitHandler)}\r\n                onClearHandler={onClearHandler}\r\n                placeholder={placeholder}\r\n            />\r\n            <input type=\"checkbox\" id=\"showOnlyMyPacks\" name=\"interest\" checked={!searchState.onlyMyPacks}\r\n                   onClick={myPacksHandler}/>\r\n            <label htmlFor=\"showOnlyMyPacks\">Only my packs</label>\r\n            <button onClick={setFiltersHandler}\r\n            style={{marginLeft: '10px'}}>Search</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport s from '../styles/PaginationDisplay.module.css';\r\n\r\ntype PaginationType = {\r\n    currentPage: number\r\n    totalItems: number\r\n    itemsOnPage: number\r\n    getPage(currentPage: number): void\r\n    getItemsOnPage(itemsOnPage: number): void\r\n}\r\n\r\nfunction PaginationDisplay({currentPage, totalItems, itemsOnPage, getPage, getItemsOnPage}: PaginationType) {\r\n\r\n    let pages: JSX.Element[] = []\r\n\r\n    const lastPage = Math.ceil(totalItems / itemsOnPage)\r\n\r\n    for (let i = 1; i <= lastPage; i++) pages.push((\r\n        <button\r\n            key={i}\r\n            style={{background: currentPage === i ? '#4c4c4c' : undefined,\r\n                color: currentPage === i ? 'white' : undefined}}\r\n            onClick={() => getPage(i)}\r\n        >\r\n            {i}\r\n        </button>\r\n    ));\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <select value={itemsOnPage}\r\n                    onChange={e => {\r\n                        getItemsOnPage(Number(e.currentTarget.value))\r\n                    }}\r\n                    style={{}}>\r\n                <option value={5}>5</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n            {pages}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaginationDisplay;\r\n","const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_ITEMS_ON_PAGE = 'SET_ITEMS_ON_PAGE';\r\n\r\nexport type InitialStateType = {\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    page: 1,\r\n    pageCount: 10,\r\n}\r\n\r\n\r\n\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setCurrentPageAC>\r\n\r\nexport const paginationReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload.value\r\n            }\r\n        case SET_ITEMS_ON_PAGE:\r\n            return {\r\n                ...state,\r\n                pageCount: action.payload.value\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCurrentPageAC = (value: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        payload: {value}\r\n    }\r\n)\r\n\r\nexport const setItemsOnPageAC = (value: number) => ({\r\n        type: SET_ITEMS_ON_PAGE,\r\n        payload: {value}\r\n    }\r\n)","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PaginationDisplay from \"./PaginationDisplay\";\r\nimport {setCurrentPageAC, setItemsOnPageAC} from \"../../redux/pagination-reducer\";\r\nimport {RootStateType} from \"../../redux/store\";\r\n\r\ntype PaginationStateType = {\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type PaginationContainerPropsType = {\r\n    totalItems: number\r\n}\r\n\r\nfunction PaginationContainer({totalItems}: PaginationContainerPropsType) {\r\n    const dispatch = useDispatch()\r\n    const paginationState = useSelector((state: RootStateType): PaginationStateType => state.pagination)\r\n\r\n\r\n    const getPage = (currentPage: number) => {\r\n        dispatch(setCurrentPageAC(currentPage))\r\n    }\r\n\r\n    const getItemsOnPage = (itemsOnPage: number) => {\r\n        dispatch(setItemsOnPageAC(itemsOnPage))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PaginationDisplay\r\n                currentPage={paginationState.page}\r\n                itemsOnPage={paginationState.pageCount}\r\n                totalItems={totalItems}\r\n                getPage={getPage}\r\n                getItemsOnPage={getItemsOnPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaginationContainer;\r\n","import React, {CSSProperties, ReactChild, ReactChildren, ReactElement, useEffect} from 'react';\r\n\r\nexport type ModalPropsType = {\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n    // children?: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\r\n    children?: ReactChild | ReactChildren | (string | ReactChildren | ReactElement)[];\r\n    // children?: (string | ReactChildren | ReactElement)[];\r\n\r\n}\r\n\r\n\r\nfunction Modal(props: ModalPropsType) {\r\n    const {\r\n        enableBackground,\r\n        backgroundStyle,\r\n        backgroundOnClick = () => {\r\n        },\r\n\r\n        width,\r\n        height,\r\n        modalStyle,\r\n        modalOnClick = () => {\r\n        },\r\n\r\n        show, children\r\n    } = props\r\n\r\n    // disable page scroll on modal show\r\n    useEffect(() => {\r\n        if (show) {\r\n            document.body.style.overflowY = 'hidden';\r\n        } else {\r\n            document.body.style.overflowY = 'unset';\r\n        }\r\n    }, [show]);\r\n\r\n    const top = `calc(50vh - ${height / 2}px)`;\r\n    const left = `calc(50vw - ${width / 2}px)`;\r\n\r\n    if (!show) return null\r\n\r\n    return (\r\n        <>\r\n            {enableBackground && <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    left: '0px',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n                    overflowY: 'hidden',\r\n\r\n                    background: 'black',\r\n                    opacity: 0.35,\r\n                    zIndex: 20,\r\n\r\n                    ...backgroundStyle,\r\n                }}\r\n                onClick={backgroundOnClick}\r\n            />}\r\n\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width,\r\n                    height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    background: 'white',\r\n                    zIndex: 21,\r\n\r\n                    ...modalStyle,\r\n                }}\r\n                onClick={modalOnClick}\r\n            >\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, {useState} from 'react';\r\nimport Modal from './Modal';\r\n\r\n\r\ntype SimpleModalPropsType = {\r\n    modalText?: string\r\n    buttonText?: string\r\n}\r\n\r\nfunction ModalContainer(props: SimpleModalPropsType) {\r\n    const [show, setShow] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => setShow(true)}>Simple modal</button>\r\n            <Modal\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n                // modalOnClick={() => setShow(false)}\r\n\r\n                show={show}\r\n            >\r\n                {props.modalText || 'Simple Modal'}\r\n                <div style={{marginTop: '5px'}}>\r\n                    <button onClick={() => setShow(false)}>\r\n                        {props.buttonText || 'Close'}\r\n                    </button>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalContainer;","import React, {CSSProperties, useEffect, useMemo, useState} from 'react';\r\n\r\nexport type IInputData = [string, (value: string) => void];\r\n\r\ninterface IInputMap {\r\n    inputData?: IInputData[];\r\n    setSaveInputs: (fObject: {f: () => void}) => void // subscribe\r\n\r\n    inputStyles?: CSSProperties;\r\n}\r\n\r\nconst InputMap: React.FC<IInputMap> = (\r\n    {\r\n        inputData,\r\n        setSaveInputs,\r\n\r\n        inputStyles,\r\n    }\r\n) => {\r\n    const defAnswersData = useMemo(() => {\r\n        return inputData ? inputData.map((iD, i) => ({id: i, value: iD[0], setValue: iD[1]})) : [];\r\n    }, []);\r\n    const [modalInputData, setModalInputData] = useState(defAnswersData);\r\n\r\n    const setInputData = (id: number, value: string) => {\r\n        setModalInputData(modalInputData.map(iD => iD.id === id ? {...iD, value} : iD));\r\n    };\r\n    useEffect(() => {\r\n        setSaveInputs({f: successCloseModal}) // subscribe\r\n    }, [modalInputData]);\r\n\r\n    const successCloseModal = () => {\r\n        for (const iD of modalInputData) iD.setValue(iD.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {modalInputData.map(iD => (\r\n                <input\r\n                    key={iD.id}\r\n                    value={iD.value}\r\n                    style={{...inputStyles}}\r\n                    onChange={e => setInputData(iD.id, e.currentTarget.value)}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputMap;\r\n","import React, {CSSProperties, ReactChildren, ReactElement, ReactNode, useState} from 'react';\r\nimport Modal from \"../Modal\";\r\nimport InputMap, {IInputData} from \"./InputMap\";\r\n\r\n// export type AnswerType = { answer: string, value1?: string, value2?:string }\r\n\r\nexport type ModalInputPropsType = {\r\n    show: boolean;\r\n    close: () => void;\r\n\r\n    inputData?: IInputData[];\r\n    modalText?: string\r\n    buttonTitle?: string\r\n    answer?: string;\r\n    setAnswer?: (answer: string) => void;\r\n\r\n    inputContainerStyles?: CSSProperties;\r\n    inputStyles?: CSSProperties;\r\n    buttonStyles?: CSSProperties;\r\n    button?: ReactNode;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n    children?: string | ReactChildren | ReactElement | (string | ReactChildren | ReactElement)[];\r\n}\r\n\r\nfunction ModalInput({\r\n                        inputData,\r\n                        modalText,\r\n                        // modalButtonTitle,\r\n                        answer,\r\n                        setAnswer = (answer) => {\r\n                        },\r\n\r\n                        inputContainerStyles,\r\n                        inputStyles,\r\n                        buttonStyles,\r\n                        button = 'OK',\r\n\r\n                        enableBackground,\r\n                        backgroundStyle,\r\n                        backgroundOnClick = () => {\r\n                        },\r\n\r\n                        width,\r\n                        height,\r\n                        modalStyle,\r\n                        modalOnClick = () => {\r\n                        },\r\n\r\n                        show,\r\n                        close,\r\n                        children,\r\n                    }: ModalInputPropsType) {\r\n    const [answerData, setAnswerData] = useState(answer);\r\n    const [saveInputs, setSaveInputs] = useState({\r\n        f: () => {\r\n        }\r\n    })\r\n\r\n    const successCloseModal = () => {\r\n        saveInputs.f();\r\n        setAnswer(answerData || '');\r\n        setSaveInputs({\r\n            f: () => {\r\n            }\r\n        }); // unsubscribe\r\n        close();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground}\r\n            backgroundOnClick={() => {\r\n                setAnswerData(answer);\r\n                backgroundOnClick()\r\n            }}\r\n            backgroundStyle={backgroundStyle}\r\n\r\n            width={width}\r\n            height={height}\r\n            modalOnClick={modalOnClick}\r\n            modalStyle={modalStyle}\r\n\r\n            show={show}\r\n        >\r\n            {modalText || 'question modal'}\r\n            {/*{children ? children : 'question Modal'}*/}\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-around',\r\n                    ...inputContainerStyles,\r\n                }}\r\n            >\r\n                {answer !== undefined && (\r\n                    <input\r\n                        value={answerData}\r\n                        style={{...inputStyles}}\r\n                        onChange={e => setAnswerData(e.currentTarget.value)}\r\n                    />\r\n                )}\r\n                <InputMap\r\n                    inputData={inputData}\r\n                    setSaveInputs={setSaveInputs} // subscribe\r\n\r\n                    inputStyles={inputStyles}\r\n                />\r\n\r\n            </div>\r\n            <button onClick={successCloseModal} style={{...buttonStyles}}>{button}</button>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalInput;","import React, {useState} from 'react';\r\nimport ModalInput from './ModalInput';\r\n\r\n\r\n// export type AnswerType = { answer: string, value1?: string, value2?: string }\r\n\r\nexport type ModalInputContainerPropsType = {\r\n    buttonTitle?: string\r\n    modalText?: string\r\n    defaultAnswer?: string\r\n    // answerCallback?: (answer: string[]) => void;\r\n    answerCallback?: (answer: {\r\n        answer: string,\r\n        value1: string,\r\n        value2: string\r\n    }) => void;\r\n    inputsCount?: 1 | 2 | 3\r\n}\r\n\r\nfunction ModalInputContainer(props: ModalInputContainerPropsType) {\r\n    const [show, setShow] = useState(false);\r\n    const [answer, setAnswer] = useState(props.defaultAnswer || 'test answer');\r\n\r\n    const [value1, setValue1] = useState('');\r\n    const [value2, setValue2] = useState('');\r\n\r\n\r\n    const setAnswerHandler = (value: string) => {\r\n        setAnswer(value)\r\n        props.answerCallback && props.answerCallback({\r\n            answer: value,\r\n            value1,\r\n            value2\r\n        })\r\n    }\r\n\r\n    const modalInputProps: any = {\r\n        show: show,\r\n        close: () => setShow(false),\r\n        modalText: props.modalText,\r\n        answer: answer,\r\n        setAnswer: setAnswerHandler,\r\n        enableBackground: true,\r\n        backgroundOnClick: () => setShow(false),\r\n        width: 300,\r\n        height: 200,\r\n    }\r\n\r\n    if (props.inputsCount === 3) {\r\n        modalInputProps.inputData = [[value1, setValue1], [value2, setValue2]]\r\n    } else if (props.inputsCount === 2) {\r\n        modalInputProps.inputData = [[value1, setValue1]]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)}>{props.buttonTitle || 'Modal Input'}</button>\r\n                {answer}{value1 && `-${value1}`}{value2 && `-${value2}`}\r\n                {/*{answer}-{value1}-{value2}*/}\r\n                {/*{answer}*/}\r\n            </div>\r\n            <ModalInput {...modalInputProps}>\r\n            </ModalInput>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalInputContainer;","import Modal from \"../Modal\";\r\nimport React, {CSSProperties, ReactChildren, ReactElement, ReactNode} from \"react\";\r\n\r\ntype ModalQuestionPropsType = {\r\n    show: boolean;\r\n\r\n    setTrue: () => void;\r\n    setFalse: () => void;\r\n    buttonStyles?: CSSProperties;\r\n    trueStyles?: CSSProperties;\r\n    falseStyles?: CSSProperties;\r\n    buttonTrue?: ReactNode;\r\n    buttonFalse?: ReactNode;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n    children?: string | ReactChildren | ReactElement;\r\n}\r\n\r\nconst ModalQuestion = ({\r\n                           setTrue,\r\n                           setFalse,\r\n                           buttonStyles,\r\n                           trueStyles,\r\n                           falseStyles,\r\n                           buttonTrue = 'Yes',\r\n                           buttonFalse = 'No',\r\n\r\n                           enableBackground,\r\n                           backgroundStyle,\r\n                           backgroundOnClick = () => {\r\n                           },\r\n\r\n                           width,\r\n                           height,\r\n                           modalStyle,\r\n                           modalOnClick = () => {\r\n                           },\r\n\r\n                           show,\r\n                           children\r\n                       }: ModalQuestionPropsType) => {\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground}\r\n            backgroundOnClick={backgroundOnClick}\r\n            backgroundStyle={backgroundStyle}\r\n\r\n            width={width}\r\n            height={height}\r\n            modalOnClick={modalOnClick}\r\n            modalStyle={modalStyle}\r\n\r\n            show={show}\r\n        >\r\n            {children ? children : <>question Modal</>}\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexFlow: 'row',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-around',\r\n                    ...buttonStyles,\r\n                }}\r\n            >\r\n                <button onClick={setTrue} style={{...trueStyles}}>{buttonTrue}</button>\r\n                <button onClick={setFalse} style={{...falseStyles}}>{buttonFalse}</button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default ModalQuestion;","import {useState} from \"react\";\r\nimport ModalQuestion from \"./ModalQuestion\";\r\n\r\nexport type ModalQuestionContainerPropsType = {\r\n    buttonTitle?: string\r\n    modalText?: string\r\n    isMine: boolean\r\n    answerCallback?: (answer: boolean) => void;\r\n}\r\n\r\nconst ModalQuestionContainer = (\r\n    {\r\n        buttonTitle = 'ModalQuestion',\r\n        modalText = 'Question text',\r\n        answerCallback = () => {\r\n        },\r\n        isMine\r\n    }: ModalQuestionContainerPropsType) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [answer, setAnswer] = useState(false);\r\n\r\n    const setTrue = () => {\r\n        setAnswer(true);\r\n        setShow(false);\r\n        answerCallback(true)\r\n\r\n    };\r\n    const setFalse = () => {\r\n        setAnswer(false);\r\n        setShow(false);\r\n        answerCallback(false)\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)}\r\n                disabled={!isMine}>{buttonTitle}</button>\r\n                {/*{answer ? <span>Yes</span> : <span>No</span>}*/}\r\n            </div>\r\n\r\n            <ModalQuestion\r\n                show={show}\r\n\r\n                setTrue={setTrue}\r\n                setFalse={setFalse}\r\n\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n            >\r\n                {modalText}\r\n            </ModalQuestion>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalQuestionContainer;","import React, {useState} from 'react';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport SuperInputText from '../common/SuperInputText/SuperInputText';\r\nimport SuperCheckbox from '../common/SuperCheckbox/SuperCheckbox';\r\nimport s from './styles/Registration.module.css'\r\nimport SearchContainer from \"../common/Search/SearchContainer\";\r\nimport PaginationContainer from \"../common/Pagination/PaginationContainer\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ModalInputContainer from '../common/modals/input/ModalInputContainer';\r\nimport ModalQuestionContainer from '../common/modals/question/ModalQuestionContainer';\r\n\r\ntype RegistrationPropsType = {\r\n    error?: string\r\n}\r\n\r\nfunction SuperInputsDemo() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"Field can't be empty\";\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"Введите текст\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n\r\n        }\r\n    };\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    // const testOnChange = (e: ChangeEvent<HTMLInputElement>) =>\r\n    //     setChecked(e.currentTarget.checked);\r\n\r\n\r\n    return (\r\n        <div className={s.demoContainer}>\r\n            <h1>\r\n                SuperInputs Demo\r\n            </h1>\r\n            <div>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.green} // проверьте, работает ли смешивание классов\r\n                />\r\n\r\n                <SuperButton\r\n                    red={text === ''} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    Button {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked}>\r\n                    CheckboxText {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n                <div>SearchComponent:\r\n                    <div style={{'border': 'solid 1px black'}}><SearchContainer placeholder={'placeholder'}/></div>\r\n                </div>\r\n                <div>Pagination:\r\n                    <div style={{'border': 'solid 1px black'}}><PaginationContainer totalItems={50}/></div>\r\n                </div>\r\n                {/*<div>Sort:*/}\r\n                {/*    <div style={{'border': 'solid 1px black'}}><SortContainer/></div>*/}\r\n                {/*</div>*/}\r\n                <ModalContainer  modalText={'Simple Modal'}  buttonText={'Close it!'}/>\r\n                <ModalInputContainer  buttonTitle={'Modal Input demo'} modalText={'Simple Modal input'} />\r\n                <ModalQuestionContainer isMine={true}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperInputsDemo;\r\n","\r\nexport type ValidatorFieldType = 'email' | 'password'\r\n\r\nconst inputValidator = (value: string, type: ValidatorFieldType): string => {\r\n    switch (type) {\r\n        case 'email':\r\n            return (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) ? '' : 'Invalid email'\r\n        case 'password':\r\n            return /^[a-zA-Z0-9!@#$%^&*]{6,16}$/i.test(value) ? '' : 'Invalid password'\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nexport default inputValidator","import React, {FormEvent} from 'react';\r\nimport style from '../styles/Login.module.css'\r\nimport appStyle from '../../common/styles/Common.module.css'\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText';\r\nimport SuperCheckbox from '../../common/SuperCheckbox/SuperCheckbox';\r\nimport SuperButton from '../../common/SuperButton/SuperButton';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {LoginFormStateType} from './LoginContainer';\r\nimport {ValidatorFieldType} from '../../common/inputValidator';\r\nimport {DEFAULT_EMAIL, DEFAULT_PASSWORD, DEV_MODE} from \"../../App\";\r\n\r\ntype LoginPropsType = {\r\n    formState: LoginFormStateType\r\n    onChangeHandler(field: ValidatorFieldType): (value: string) => void\r\n    onBlurHandler(field: ValidatorFieldType): (e: React.FocusEvent<HTMLInputElement>) => void\r\n    checkBoxHandler(rememberMe: boolean): void\r\n    onSubmitHandler(email: string, password: string, rememberMe: boolean): void\r\n}\r\n\r\nfunction Login({formState, onChangeHandler, onBlurHandler, checkBoxHandler, onSubmitHandler}: LoginPropsType) {\r\n    console.log('Login called')\r\n    const email = formState.email\r\n    const password = formState.password\r\n    const rememberMe = formState.rememberMe\r\n\r\n    const submitForm = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        onSubmitHandler(email.value, password.value, rememberMe)\r\n    }\r\n\r\n    const disableSubmit = !!(email.error || password.error || formState.globalFormError)\r\n\r\n    return (\r\n        <div className={style.pageContainer}>\r\n            <form className={style.form} onSubmit={submitForm}>\r\n                <h1>Sign in</h1>\r\n                <SuperInputText\r\n                    value={email.value}\r\n                    error={email.error}\r\n                    onChangeText={onChangeHandler('email')}\r\n                    onBlur={onBlurHandler('email')}\r\n                    placeholder={'Email'}\r\n                    type={'text'}\r\n                />\r\n                <SuperInputText\r\n                    value={password.value}\r\n                    error={password.error}\r\n                    onChangeText={onChangeHandler('password')}\r\n                    onBlur={onBlurHandler('password')}\r\n                    placeholder={'Password'}\r\n                    type={'password'}\r\n                />\r\n                <NavLink to={'/recover'}><span>Forgot password?</span></NavLink>\r\n                <div className={style.rememberMe}>\r\n                    <SuperCheckbox onChangeChecked={checkBoxHandler} checked={rememberMe}/>\r\n                    <span>Remember me</span>\r\n                </div>\r\n                <SuperButton className={appStyle.defaultButton}\r\n                             disabled={disableSubmit}\r\n                             type={'submit'}\r\n                >Sign in</SuperButton>\r\n            </form>\r\n            {DEV_MODE ?\r\n                <div className={style.messageDefault}>\r\n                    <div>To sign in you can use test account credentials:</div>\r\n                    <div className={style.credentialsContainer}>\r\n                        <div className={style.credentialsString}>\r\n                            <div className={style.credentialsTitle}>email:</div>\r\n                            <div className={style.credentialsValue}>{`${DEFAULT_EMAIL}`}</div>\r\n                        </div>\r\n                        <div className={style.credentialsString}>\r\n                            <div className={style.credentialsTitle}>password:</div>\r\n                            <div className={style.credentialsValue}>{`${DEFAULT_PASSWORD}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, {useState} from 'react';\r\nimport inputValidator from '../../common/inputValidator';\r\nimport Login from './Login';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {logInTC} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {DEFAULT_EMAIL, DEFAULT_PASSWORD, DEV_MODE} from \"../../App\";\r\n\r\nexport type LoginFormStateType = {\r\n    email: InputStateType\r\n    password: InputStateType\r\n    rememberMe: boolean\r\n    globalFormError: string\r\n}\r\n\r\nexport type InputStateType = {\r\n    value: string\r\n    error: string\r\n    touched: boolean\r\n}\r\n\r\nfunction LoginContainer() {\r\n    console.log('LoginContainer called')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: RootStateType): boolean => state.auth.isLoggedIn)\r\n\r\n    let [formState, setFormState] = useState<LoginFormStateType>(\r\n        {\r\n            email: {value: DEV_MODE ? DEFAULT_EMAIL : '', error: '', touched: false},\r\n            password: {value: DEV_MODE ? DEFAULT_PASSWORD : '', error: '', touched: false},\r\n            rememberMe: false,\r\n            globalFormError: ''\r\n        })\r\n\r\n    const onChangeHandler = (field: 'email' | 'password') => (value: string) => {\r\n        setFormState({\r\n            ...formState, [field]:\r\n                {\r\n                    ...formState[field],\r\n                    value: value.trim(),\r\n                    error: formState[field].touched ? inputValidator(value, field) : ''\r\n                }\r\n        })\r\n    }\r\n\r\n    const onBlurHandler = (field: 'email' | 'password') => (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setFormState({\r\n            ...formState, [field]:\r\n                {\r\n                    ...formState[field],\r\n                    error: formState[field].value ? inputValidator(e.target.value, field) : 'Required field',\r\n                    touched: true\r\n                }\r\n        })\r\n    }\r\n\r\n    const checkBoxHandler = (rememberMe: boolean) => {\r\n        setFormState({...formState, rememberMe}\r\n        )\r\n    }\r\n\r\n    const onSubmitHandler = (email: string, password: string, rememberMe: boolean) => {\r\n        dispatch(logInTC(email, password, rememberMe))\r\n    }\r\n\r\n    return (\r\n        isLoggedIn\r\n            ? <Redirect to={'profile'}/>\r\n            : <div>\r\n                <Login\r\n                    formState={formState}\r\n                    onChangeHandler={onChangeHandler}\r\n                    onBlurHandler={onBlurHandler}\r\n                    checkBoxHandler={checkBoxHandler}\r\n                    onSubmitHandler={onSubmitHandler}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from '../styles/Recover.module.css'\r\n\r\ntype RecoverTimerPropsType = {\r\n    getTime(): number\r\n    hideTimer(show: boolean): void\r\n}\r\n\r\nfunction RecoverTimer({getTime, hideTimer}: RecoverTimerPropsType) {\r\n    console.log('RecoverTimer called')\r\n\r\n    const [timeMs, setTimeMs] = useState(getTime())\r\n\r\n    const tick = () => {\r\n        setTimeMs(getTime())\r\n        if (getTime() < 0) hideTimer(false)\r\n    }\r\n\r\n    const convertMsToTime = (ms: number) => {\r\n        const minutes = Math.floor(ms / 60000);\r\n        const seconds = ((ms % 60000) / 1000);\r\n        return minutes + ':' + (seconds < 10 ? '0' : '') + Math.floor(seconds)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timerID = setInterval(() => tick(), 1000);\r\n        return () => clearInterval(timerID);\r\n    }, [])\r\n\r\n    return (\r\n        <span className={style.timer}>\r\n                {`Time till next link: ${convertMsToTime(timeMs)}`}\r\n            </span>\r\n    )\r\n}\r\n\r\nexport default RecoverTimer;","import {DispatchType} from './auth-reducer';\r\nimport {API} from '../api/API';\r\n\r\ntype PageStateType = {\r\n    timerIsOn: boolean\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    timerIsOn: false,\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof toggleTimerAC>\r\n\r\nexport const recoverReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_TIMER_STATUS:\r\n            return {...state, timerIsOn: action.timerIsOn}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst TOGGLE_TIMER_STATUS = 'TOGGLE-TIMER-STATUS'\r\n\r\nexport const toggleTimerAC = (timerIsOn: boolean) => ({\r\n        type: TOGGLE_TIMER_STATUS,\r\n        timerIsOn\r\n    } as const\r\n)\r\n\r\n// Thunks\r\n\r\nexport const recoverPasswordTC = (email: string, baseUrl: string) => (dispatch: DispatchType) => {\r\n    const from = 'Administrator'\r\n    const message =\r\n        `<div style=\"background-color: lime; padding: 15px\"> password recovery link:\r\n         <a href='${baseUrl}/$token$'>link</a></div>`\r\n    API.forgot(email, from, message)\r\n        .then(response => {\r\n            // localStorage.timerData = Date.now()\r\n        })\r\n        .catch(e => {\r\n            console.log('Recover Error', e)\r\n        })\r\n        .finally(() => {\r\n            localStorage.timerData = Date.now()\r\n            dispatch(toggleTimerAC(true))\r\n        })\r\n\r\n}","import React, {FormEvent} from 'react';\r\nimport style from '../styles/Recover.module.css'\r\nimport appStyle from '../../common/styles/Common.module.css'\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText';\r\nimport {NavLink} from 'react-router-dom';\r\nimport SuperButton from '../../common/SuperButton/SuperButton';\r\nimport {RecoverFormStateType} from './RecoverContainer';\r\nimport RecoverTimer from './RecoverTimer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {toggleTimerAC} from '../../redux/recover-reducer';\r\n\r\ntype RecoverPropsType = {\r\n    formState: RecoverFormStateType\r\n    onChangeHandler(value: string): void\r\n    onBlurHandler(e: React.FocusEvent<HTMLInputElement>): void\r\n    onSubmitHandler(email: string): void\r\n}\r\n\r\nconst Recover = ({formState, onChangeHandler, onBlurHandler, onSubmitHandler}: RecoverPropsType) => {\r\n    console.log('Recover called')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const timerValueMs = 11000\r\n    const getTime = () => (Number(localStorage.timerData) + timerValueMs - Date.now())\r\n    dispatch(toggleTimerAC(getTime() > 0))\r\n    const timerIsOn = useSelector((state: RootStateType) => state.pageRecover.timerIsOn)\r\n\r\n    const hideTimer = () => {\r\n        dispatch(toggleTimerAC(false))\r\n    }\r\n\r\n    const submitForm = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        onSubmitHandler(formState.value)\r\n    }\r\n\r\n    return (\r\n        <form className={style.form} onSubmit={submitForm}>\r\n            <h1 className={appStyle.defaultTitle}>Recover</h1>\r\n            <SuperInputText\r\n                value={formState.value}\r\n                error={formState.error}\r\n                onChangeText={onChangeHandler}\r\n                onBlur={onBlurHandler}\r\n                placeholder={'Email'}\r\n            />\r\n            <div className={style.timerContainer}>\r\n                {timerIsOn\r\n                    ? <RecoverTimer getTime={getTime} hideTimer={hideTimer}/>\r\n                    : <SuperButton className={appStyle.defaultButton}\r\n                                   disabled={!!formState.error}\r\n                                   type={'submit'}>Send</SuperButton>\r\n                }\r\n            </div>\r\n            <NavLink to={'/login'}><span>Login page</span></NavLink>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Recover;\r\n","import React, {useState} from 'react';\r\nimport inputValidator from '../../common/inputValidator';\r\nimport Recover from './Recover';\r\nimport {useDispatch} from 'react-redux';\r\nimport {recoverPasswordTC} from '../../redux/recover-reducer';\r\n\r\nexport type RecoverFormStateType = {\r\n    value: string\r\n    error: string\r\n    touched: boolean\r\n}\r\n\r\n!localStorage.timerData && localStorage.setItem('timerData', '0')\r\n\r\nfunction RecoverContainer() {\r\n    console.log('RecoverContainer called')\r\n\r\n    const dispatch = useDispatch()\r\n    let [formState, setFormState] =\r\n        useState<RecoverFormStateType>({value: '', error: '', touched: false})\r\n    const baseUrl = `${window.location.origin}/#/set-new-password`\r\n\r\n    const onChangeHandler = (value: string) => {\r\n        setFormState({\r\n            ...formState,\r\n            value: value.trim(),\r\n            error: formState.touched ? inputValidator(value, 'email') : ''\r\n        })\r\n    }\r\n\r\n    const onBlurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setFormState({\r\n            ...formState,\r\n            error: formState.value ? inputValidator(e.target.value, 'email') : 'Required field',\r\n            touched: true\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = (email: string) => {\r\n        setFormState({\r\n            ...formState,\r\n            error: formState.value ? inputValidator(email, 'email') : 'Required field',\r\n            touched: true\r\n        })\r\n        if (!inputValidator(formState.value, 'email')) {\r\n            dispatch(recoverPasswordTC(email, baseUrl))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Recover\r\n            formState={formState}\r\n            onChangeHandler={onChangeHandler}\r\n            onBlurHandler={onBlurHandler}\r\n            onSubmitHandler={onSubmitHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default RecoverContainer;\r\n","import React, {FormEvent} from 'react';\r\nimport style from '../styles/Login.module.css'\r\nimport appStyle from '../../common/styles/Common.module.css'\r\nimport SuperButton from '../../common/SuperButton/SuperButton';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {NewPasswordFormStateType} from './NewPasswordContainer';\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText';\r\n\r\ntype RecoverPropsType = {\r\n    formState: NewPasswordFormStateType\r\n    onChangeHandler(field: 'password' | 'confirm'): (value: string) => void\r\n    onBlurHandler(field: 'password' | 'confirm'): (e: React.FocusEvent<HTMLInputElement>) => void\r\n    onSubmitHandler(password: string): void\r\n}\r\n\r\nconst NewPassword = ({formState, onChangeHandler, onBlurHandler, onSubmitHandler,}: RecoverPropsType) => {\r\n    console.log('NewPassword called')\r\n\r\n    const submitForm = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        onSubmitHandler(formState.password.value)\r\n    }\r\n\r\n    const formError = !!(formState.password.error || formState.confirm.error)\r\n\r\n    return (\r\n        <form className={style.form} onSubmit={submitForm}>\r\n            <h1 className={appStyle.defaultTitle}>New password</h1>\r\n            <SuperInputText\r\n                value={formState.password.value}\r\n                error={formState.password.error}\r\n                onChangeText={onChangeHandler('password')}\r\n                onBlur={onBlurHandler('password')}\r\n                placeholder={'Enter new password'}\r\n                type={'password'}\r\n            />\r\n            <SuperInputText\r\n                value={formState.confirm.value}\r\n                error={formState.confirm.error}\r\n                onChangeText={onChangeHandler('confirm')}\r\n                onBlur={onBlurHandler('confirm')}\r\n                placeholder={'Confirm'}\r\n                type={'password'}\r\n            />\r\n            <SuperButton className={appStyle.defaultButton}\r\n                         disabled={formError} type={'submit'}>\r\n                <span>Send</span>\r\n            </SuperButton>\r\n            <NavLink to={'/login'}><span>Login page</span></NavLink>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewPassword","import React, {useEffect, useState} from 'react';\r\nimport inputValidator from '../../common/inputValidator';\r\nimport NewPassword from './NewPassword';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setNewPasswordTC} from '../../redux/auth-reducer';\r\nimport {useParams, useLocation} from 'react-router-dom';\r\n\r\nexport type NewPasswordFormStateType = {\r\n    password: InputType\r\n    confirm: InputType\r\n}\r\n\r\ntype InputType = {\r\n    value: string\r\n    error: string\r\n    touched: boolean\r\n}\r\n\r\ntype ParamsType = {\r\n    token: string | undefined\r\n}\r\n\r\nfunction NewPasswordContainer() {\r\n    console.log('NewPasswordContainer called')\r\n\r\n    const dispatch = useDispatch()\r\n    const params: ParamsType = useParams()\r\n    const token = params.token ? params.token : ''\r\n    window.history.replaceState(null, '', '/#/set-new-password')\r\n\r\n    let [formState, setFormState] = useState<NewPasswordFormStateType>(\r\n        {\r\n            password: {value: '', error: '', touched: false},\r\n            confirm: {value: '', error: '', touched: false}\r\n        })\r\n\r\n    const onChangeHandler = (field: 'password' | 'confirm') => (value: string) => {\r\n        setFormState({\r\n            ...formState, [field]:\r\n                {\r\n                    ...formState[field],\r\n                    value: value.trim(),\r\n                    error: formState[field].touched ? inputValidator(value, 'password') : ''\r\n                }\r\n        })\r\n    }\r\n\r\n    const onBlurHandler = (field: 'password' | 'confirm') => (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setFormState({\r\n            ...formState, [field]:\r\n                {\r\n                    ...formState[field],\r\n                    error: formState[field].value ?\r\n                        inputValidator(e.target.value, 'password') : 'Required field',\r\n                    touched: true\r\n                }\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = (password: string) => {\r\n        const error = !formState.password.value\r\n            ? 'Please enter new password'\r\n            : formState.password.value !== formState.confirm.value\r\n            ? 'Passwords do not match'\r\n            : ''\r\n        if (error) {\r\n            setFormState({\r\n                ...formState,\r\n                password: {...formState.password, error: ' ', touched: true},\r\n                confirm: {...formState.confirm, error, touched: true}\r\n            })\r\n        } else {\r\n            dispatch(setNewPasswordTC(password, token))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <NewPassword\r\n            formState={formState}\r\n            onChangeHandler={onChangeHandler}\r\n            onBlurHandler={onBlurHandler}\r\n            onSubmitHandler={onSubmitHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NewPasswordContainer;\r\n","export default __webpack_public_path__ + \"static/media/loader.b257f2d9.svg\";","import React, {useEffect, useState} from 'react'\r\nimport style from './loader.module.css'\r\nimport loader from './loader.svg'\r\n\r\nexport function Loader() {\r\n\r\n    // const [isMounted, setIsMounted] = useState(true);\r\n    // const shouldRender = useDelayUnmount(isMounted, 500);\r\n    // const mountedStyle = {opacity: 1, transition: 'opacity 500ms ease-in'};\r\n    // const unmountedStyle = {opacity: 0, transition: 'opacity 500ms ease-in'};\r\n    //\r\n    // function useDelayUnmount(isMounted: boolean, delayTime: number) {\r\n    //     const [shouldRender, setShouldRender] = useState(false);\r\n    //\r\n    //     useEffect(() => {\r\n    //         let timeoutId: any;\r\n    //         if (isMounted && !shouldRender) {\r\n    //             setShouldRender(true);\r\n    //         } else if (!isMounted && shouldRender) {\r\n    //             timeoutId = setTimeout(\r\n    //                 () => setShouldRender(false),\r\n    //                 delayTime\r\n    //             );\r\n    //         }\r\n    //         return () => clearTimeout(timeoutId);\r\n    //     }, [isMounted, delayTime, shouldRender]);\r\n    //     return shouldRender;\r\n    // }\r\n    //\r\n    // const fadeStyle = isMounted ? mountedStyle : unmountedStyle\r\n    //\r\n    // useEffect(() => {\r\n    //     setTimeout(() => setIsMounted(false), 100)\r\n\r\n    // return (\r\n    //         <div className={`${style.dimScreen} ${fadeStyle}`}>\r\n    //             <img className={style.loader}\r\n    //                  src={loader}\r\n    //                  alt=\"Loading...\"/>\r\n    //         </div>\r\n    // )\r\n\r\n    return (\r\n        <div className={`${style.dimScreen}`}>\r\n            <img className={style.loader}\r\n                 src={loader}\r\n                 alt=\"Loading...\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {FormEvent} from 'react';\r\nimport SuperButton from '../../common/SuperButton/SuperButton';\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText';\r\nimport style from '../styles/Registration.module.css'\r\nimport appStyle from '../../common/styles/Common.module.css'\r\nimport {RegistrationFormStateType} from \"./RegistrationContainer\";\r\nimport {RegistrationValidatorFieldType} from '../../common/registrationInputValidator';\r\n\r\n// type RegistrationPropsType = {\r\n//     error?: string\r\n// }\r\ntype RegistrationPropsType = {\r\n    registrationFormState: RegistrationFormStateType\r\n    onChangeHandler(field: RegistrationValidatorFieldType): (value: string) => void\r\n    onBlurHandler(field: RegistrationValidatorFieldType): (e: React.FocusEvent<HTMLInputElement>) => void\r\n    onSubmitHandler(email: string, password: string): void\r\n}\r\n\r\n// type StateType = {\r\n//     email: string\r\n//     password1: string\r\n//     password2: string\r\n//     errorResponse: string\r\n//     successfullyRegistered: boolean\r\n// }\r\n// const initialState: StateType = {\r\n//     email: \"\",\r\n//     password1: \"\",\r\n//     password2: \"\",\r\n//     errorResponse: \"\",\r\n//     successfullyRegistered: false\r\n// }\r\n\r\n// const RegistrationFormInitialState: RegistrationFormStateType = {}\r\n\r\n\r\nfunction Registration2({registrationFormState, onChangeHandler, onBlurHandler, onSubmitHandler}: RegistrationPropsType) {\r\n    // const [state, setState] = useState<StateType>(initialState);\r\n    // const emailError = state.email ? \"\" : \"Field can't be empty\";\r\n    //\r\n    // const pw1Error = state.password1 ? \"\" : \"Field can't be empty\";\r\n    //\r\n    // const pw2Error = state.password2 ? \"\" : \"Field can't be empty\";\r\n\r\n    const email = registrationFormState.email\r\n    const password = registrationFormState.password\r\n    const password2 = registrationFormState.password2\r\n    const errorResponse = registrationFormState.errorResponse\r\n\r\n    const submitForm = (e: FormEvent<HTMLFormElement>) => {\r\n        e.stopPropagation()\r\n        onSubmitHandler(email.value, password.value)\r\n    }\r\n\r\n    const disableSubmit = !!(email.error || password.error || password2.error || registrationFormState.globalFormError)\r\n    // const handleSignUp = () => {\r\n    //     if (false) {\r\n    //         alert(\"Введите текст\");\r\n    //     } else {\r\n    //         API.registerUser(state.email, state.password1)\r\n    //             .then((res: any) => {\r\n    //                 console.log(`User ${res.data.addedUser.email} successfully signed up`)\r\n    //                 //setState({...state, errorResponse: error.response.data.error})\r\n    //                 //return <Redirect to={'/friday_project#/login/'}/>\r\n    //                 setSuccessfulRegistration(true)\r\n    //\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 setState({...state, errorResponse: error.response.data.error})\r\n    //             })\r\n    //     }\r\n    // };\r\n\r\n    // const handleEmail = (val: string) => {\r\n    //     //alert(val)\r\n    //     setState({...state, email: val, errorResponse: \"\"})\r\n    // }\r\n    // const handlePw1 = (val: string) => {\r\n    //     //alert(val)\r\n    //     setState({...state, password1: val, errorResponse: \"\"})\r\n    // }\r\n    // const handlePw2 = (val: string) => {\r\n    //     // alert(val)\r\n    //     setState({...state, password2: val, errorResponse: \"\"})\r\n    // }\r\n\r\n    // const setSuccessfulRegistration = (val: boolean) => {\r\n    //     setState({...state, successfullyRegistered: val})\r\n    // }\r\n\r\n    return (\r\n        <div className={style.pageContainer}>\r\n        <form className={style.form} onSubmit={submitForm}>\r\n            <h1 className={appStyle.defaultTitle}>Sign Up</h1>\r\n            <div className={style.registrationErrorMessage}>\r\n                {errorResponse}\r\n            </div>\r\n            <div className={style.container}>\r\n                <SuperInputText\r\n                    title={'Email'}\r\n                    value={email.value}\r\n                    error={email.error}\r\n                    onChangeText={onChangeHandler('email')}\r\n                    onBlur={onBlurHandler('email')}\r\n                    // placeholder={'Email'}\r\n                    type={'text'}\r\n                />\r\n\r\n                <SuperInputText\r\n                    title={'Password'}\r\n                    value={password.value}\r\n                    error={password.error}\r\n                    onChangeText={onChangeHandler('password')}\r\n                    onBlur={onBlurHandler('password')}\r\n                    // placeholder={'Password'}\r\n                    type={'password'}\r\n                />\r\n\r\n                <SuperInputText\r\n                    title={'Confirm password'}\r\n                    value={password2.value}\r\n                    error={password2.error}\r\n                    onChangeText={onChangeHandler('password2')}\r\n                    onBlur={onBlurHandler('password2')}\r\n                    // placeholder={'Password'}\r\n                    type={'password'}\r\n                />\r\n                {/*<SuperInputText*/}\r\n                {/*    title={'Password'}*/}\r\n                {/*    value={password.value}*/}\r\n                {/*    onChangeText={handlePw1}*/}\r\n                {/*    onEnter={handleSignUp}*/}\r\n                {/*    error={pw1Error}*/}\r\n                {/*    className={style.green}*/}\r\n                {/*/>*/}\r\n                {/*<SuperInputText*/}\r\n                {/*    title={'Confirm password'}*/}\r\n                {/*    value={password2.value}*/}\r\n                {/*    onChangeText={handlePw2}*/}\r\n                {/*    onEnter={handleSignUp}*/}\r\n                {/*    error={pw2Error}*/}\r\n                {/*    className={style.green}*/}\r\n                {/*/>*/}\r\n\r\n                <SuperButton\r\n                    className={`${appStyle.defaultButton} ${style.submitButton}`}\r\n                    disabled={disableSubmit}\r\n                    type={'submit'}\r\n                >\r\n                    Sign up {/* название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n            </div>\r\n\r\n        </form>\r\n        </div>\r\n\r\n\r\n        // state.successfullyRegistered ?\r\n        //     <Redirect to={'login'}/>\r\n        //     :\r\n        //     <div className={style.form}>\r\n        //\r\n        //         <div>\r\n        //             Registration\r\n        //         </div>\r\n        //         <div className={style.registrationErrorMessage}>\r\n        //             {state.errorResponse}\r\n        //         </div>\r\n        //         <div>\r\n        //             <SuperInputText\r\n        //                 title={'Email'}\r\n        //                 value={state.email}\r\n        //                 onChangeText={handleEmail}\r\n        //                 onEnter={handleSignUp}\r\n        //                 error={emailError}\r\n        //                 className={style.green}\r\n        //             />\r\n        //             <SuperInputText\r\n        //                 title={'Password'}\r\n        //                 value={state.password1}\r\n        //                 onChangeText={handlePw1}\r\n        //                 onEnter={handleSignUp}\r\n        //                 error={pw1Error}\r\n        //                 className={style.green}\r\n        //             />\r\n        //             <SuperInputText\r\n        //                 title={'Confirm password'}\r\n        //                 value={state.password2}\r\n        //                 onChangeText={handlePw2}\r\n        //                 onEnter={handleSignUp}\r\n        //                 error={pw2Error}\r\n        //                 className={style.green}\r\n        //             />\r\n        //\r\n        //             <SuperButton\r\n        //                 red={false} // пропсу с булевым значением не обязательно указывать true\r\n        //                 onClick={handleSignUp}\r\n        //             >\r\n        //                 Sign up {/*// название кнопки попадёт в children*/}\r\n        //             </SuperButton>\r\n        //\r\n        //\r\n        //         </div>\r\n        //     </div>\r\n    )\r\n}\r\n\r\nexport default Registration2;\r\n","\r\nexport type RegistrationValidatorFieldType = 'email' | 'password' | 'password2'\r\n\r\nconst registrationInputValidator = (type: RegistrationValidatorFieldType, value: string, password1?: string ): string => {\r\n    // console.log(`${type} field validation. Value: ${value}`)\r\n    switch (type) {\r\n        case 'email':\r\n            return (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) ? '' : 'Invalid email'\r\n        case 'password':\r\n            return /^[a-zA-Z0-9!@#$%^&*]{6,16}$/i.test(value) ? '' : 'Invalid password'\r\n        case 'password2':\r\n            return value === password1 ? '' : 'Please make sure your passwords match'\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nexport default registrationInputValidator\r\n\r\n//\r\n// const password2Validator = (password1: string, password2: string): string => {\r\n//     if (password1 !== password2){\r\n//         return 'Please make sure your passwords match'\r\n//     } else {\r\n//         return ''\r\n//     }\r\n//\r\n// }\r\n//\r\n// export default password2Validator","import {setAppStatusAC} from \"./app-reducer\";\r\nimport {API} from \"../api/API\";\r\nimport {DispatchType} from \"./auth-reducer\";\r\n\r\nconst SET_SUCCESSFULLY_REGISTERED = 'SET-SUCCESSFULLY-REGISTERED'\r\n\r\ntype PageStateType = {\r\n    isSuccessfullyRegistered: boolean\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    isSuccessfullyRegistered: false\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setSuccessfullyRegisteredAC>\r\n\r\nexport const registrationReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_SUCCESSFULLY_REGISTERED:\r\n\r\n            return {...state, isSuccessfullyRegistered: action.isSuccessfullyRegistered}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setSuccessfullyRegisteredAC = (isSuccessfullyRegistered: boolean) => ({\r\n        type: SET_SUCCESSFULLY_REGISTERED,\r\n        isSuccessfullyRegistered\r\n    } as const\r\n)\r\n\r\nexport const registrationTC = (email: string, password: string) => (dispatch: DispatchType) => {\r\n    // dispatch(setAppStatusAC('loading'))\r\n    // API.registration(email, password)\r\n    //     .then((response) => {\r\n    //          dispatch(setProfileAC(response))\r\n    //         dispatch(setIsLoggedInAC(true))\r\n    //     })\r\n    //     .catch(e => console.log('Error: ', {...e}))\r\n    //     .finally(() => dispatch(setAppStatusAC('idle')))\r\n    dispatch(setAppStatusAC('loading'))\r\n    API.registration(email, password)\r\n        .then((response) => {\r\n             //dispatch(setProfileAC(response))\r\n             dispatch(setSuccessfullyRegisteredAC(true))\r\n        })\r\n        .catch(e => console.log('Error: ', {...e}))\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {API} from '../../api/API';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store\";\r\nimport Registration2 from './Registration2';\r\nimport registrationInputValidator from \"../../common/registrationInputValidator\";\r\nimport {logInTC} from \"../../redux/auth-reducer\";\r\nimport {registrationTC, setSuccessfullyRegisteredAC} from \"../../redux/registration-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport type RegistrationFormStateType = {\r\n    email: InputStateType\r\n    password: InputStateType\r\n    password2: InputStateType\r\n    errorResponse: string\r\n    successfullyRegistered: boolean\r\n    // rememberMe: boolean\r\n    globalFormError: string\r\n\r\n}\r\n\r\nexport type InputStateType = {\r\n    value: string\r\n    error: string\r\n    touched: boolean\r\n}\r\n\r\n// type StateType = {\r\n//     email: string\r\n//     password1: string\r\n//     password2: string\r\n//     errorResponse: string\r\n//     successfullyRegistered: boolean\r\n// }\r\nconst initialState: RegistrationFormStateType = {\r\n    email: {value: '', error: '', touched: false},\r\n    password: {value: '', error: '', touched: false},\r\n    password2: {value: '', error: '', touched: false},\r\n    errorResponse: \"\",\r\n    successfullyRegistered: false,\r\n    globalFormError: ''\r\n}\r\n\r\n\r\nfunction RegistrationContainer() {\r\n    console.log('Registration Container component called')\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: RootStateType): boolean => state.auth.isLoggedIn)\r\n    const isSuccessfullyRegistered = useSelector((state: RootStateType): boolean => state.pageRegistration.isSuccessfullyRegistered)\r\n\r\n    const [registrationFormState, setRegistrationFormState] = useState<RegistrationFormStateType>(initialState);\r\n\r\n    useEffect(() => {\r\n        if (isSuccessfullyRegistered) {\r\n            dispatch(setSuccessfullyRegisteredAC(false))\r\n        }\r\n    })\r\n\r\n    // const emailError = formState.email ? \"\" : \"Field can't be empty\";\r\n    // const pw1Error = formState.password1 ? \"\" : \"Field can't be empty\";\r\n    // const pw2Error = formState.password2 ? \"\" : \"Field can't be empty\";\r\n\r\n    // const handleSignUp = () => {\r\n    //     if (false) {\r\n    //         alert(\"Введите текст\");\r\n    //     } else {\r\n    //         API.registration(registrationFormState.email.value, registrationFormState.password.value)\r\n    //             .then((res: any) => {\r\n    //                 console.log(`User ${res.data.addedUser.email} successfully signed up`)\r\n    //                 setSuccessfulRegistration(true)\r\n    //\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 setRegistrationFormState({...registrationFormState, errorResponse: error.response.data.error})\r\n    //             })\r\n    //     }\r\n    // };\r\n\r\n\r\n    // const onChangeHandler = (field: 'email' | 'password') => (value: string) => {\r\n    //     setRegistrationFormState({\r\n    //         ...registrationFormState, [field]:\r\n    //             {\r\n    //                 ...registrationFormState[field],\r\n    //                 value: value.trim(),\r\n    //                 error: registrationFormState[field].touched ? inputValidator(value, field) : ''\r\n    //             }\r\n    //     })\r\n    // }\r\n\r\n    const onRegistrationInputsChangeHandler = (field: 'email' | 'password' | 'password2') =>\r\n        (value: string) => {\r\n            setRegistrationFormState({\r\n                ...registrationFormState,\r\n                [field]:\r\n                    {\r\n                        ...registrationFormState[field],\r\n                        value: value.trim(),\r\n                        error: registrationFormState[field].touched ?\r\n                            registrationInputValidator(field, value, registrationFormState.password.value)\r\n                            : ''\r\n                    }, // исправить проверку password2\r\n            })\r\n        }\r\n\r\n    // const onPassword2ChangeHandler = (field: 'password2' ) => (value: string) => {\r\n    //     setRegistrationFormState({\r\n    //         ...registrationFormState, [field]:\r\n    //             {\r\n    //                 ...registrationFormState[field],\r\n    //                 value: value.trim(),\r\n    //                 error: registrationFormState[field].touched ? password2Validator(value, field) : ''\r\n    //             }\r\n    //     })\r\n    // }\r\n\r\n    const onBlurHandler = (field: 'email' | 'password') => (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setRegistrationFormState({\r\n            ...registrationFormState, [field]:\r\n                {\r\n                    ...registrationFormState[field],\r\n                    error: registrationFormState[field].value ?\r\n                        registrationInputValidator(field, e.target.value, registrationFormState.password.value)\r\n                        : 'Required field',\r\n                    touched: true\r\n                }\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = (email: string, password: string) => {\r\n        // alert(`email: ${email}\\npw: ${password}`)\r\n        dispatch(registrationTC(email, password))\r\n    }\r\n\r\n    // const setSuccessfulRegistration = (val: boolean) => {\r\n    //     setRegistrationFormState({...registrationFormState, successfullyRegistered: val})\r\n    // }\r\n\r\n\r\n    return (\r\n        isSuccessfullyRegistered\r\n            ?\r\n            <Redirect to={'profile'}/>\r\n        : <Registration2\r\n            registrationFormState={registrationFormState}\r\n            onChangeHandler={onRegistrationInputsChangeHandler}\r\n            onBlurHandler={onBlurHandler}\r\n            onSubmitHandler={onSubmitHandler}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default RegistrationContainer;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from '../styles/PacksPage.module.css'\r\nimport {CardType} from '../../api/API';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\n\r\ntype CardItemPropsType = {\r\n    deleteCallback(): void\r\n    updateCallback(): void\r\n}\r\n\r\nfunction CardItem(props: CardType & CardItemPropsType) {\r\n\r\n    const myId = useSelector((state: RootStateType) => state.auth.profile?._id)\r\n    const itemIsMine = props.user_id === myId\r\n\r\n    const updated = new Date(props.updated)\r\n        .toLocaleDateString(\"en-UE\", {hour12: false, hour: 'numeric', minute: 'numeric'});\r\n\r\n    const created = new Date(props.created)\r\n        .toLocaleDateString(\"en-UE\", {hour12: false, hour: 'numeric', minute: 'numeric'});\r\n\r\n    return (\r\n        <li>\r\n            <div className={`${style.packItem}${itemIsMine? '' : (' ' + style.itemIsNotMine)}`}>\r\n                <div style={{width: '15%'}}>{props.question}</div>\r\n                <div style={{width: '10%'}}>{props.answer}</div>\r\n                <div style={{width: '15%'}}>\r\n                    {Math.round((props.grade + Number.EPSILON) * 100) / 100}</div>\r\n                <div style={{width: '10%', fontSize: '12px'}}>{updated}</div>\r\n                <div style={{width: '10%', fontSize: '12px'}}>{created}</div>\r\n                <div style={{width: '15%'}}>\r\n                    <button disabled={!itemIsMine}\r\n                            onClick={props.deleteCallback}>Delete</button>\r\n                    <button style={{marginLeft: '5px'}}\r\n                            disabled={!itemIsMine}\r\n                            onClick={props.updateCallback}>Update</button>\r\n                </div>\r\n                <div style={{width: '25%'}}/>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default CardItem;\r\n","import {CardType, cardsAPI} from '../api/API';\r\nimport {setAppStatusAC} from './app-reducer';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {RootStateType} from './store';\r\nimport {Action} from 'redux';\r\nimport {setAuthTC} from './auth-reducer';\r\n\r\ntype PageStateType = {\r\n    packTitle: string\r\n    cards: Array<CardType>\r\n    totalCardsCount: number\r\n    itemsPerPage: number\r\n    currentPage: number\r\n    params: GetCardsParamsType\r\n}\r\n\r\nexport type GetCardsParamsType = {\r\n    cardName?: string\r\n    min?: number\r\n    max?: number\r\n    page?: number\r\n    pageCount: number\r\n    sortCards: '1grade' | '0grade'\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    packTitle: 'Pack',\r\n    cards: [],\r\n    totalCardsCount: 0,\r\n    itemsPerPage: 5,\r\n    currentPage: 1,\r\n    params: {\r\n        page: 1,\r\n        pageCount: 10,\r\n        sortCards: '1grade',\r\n    }\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setSortCardsAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setItemsPerPageAC>\r\n    | ReturnType<typeof setTotalCardsCountAC>\r\n    | ReturnType<typeof setPackTitleAC>\r\n\r\n\r\nexport const cardsReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n\r\n        case 'SET-SORT-CARDS':\r\n            return {...state, params: {\r\n                ...state.params, sortCards: state.params.sortCards === '1grade'? '0grade' : '1grade'\r\n                }}\r\n\r\n        case 'SET-PACK-TITLE':\r\n            return {...state, packTitle: action.title}\r\n\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case 'SET-ITEMS-PER-PAGE':\r\n            return {...state, itemsPerPage: action.itemsPerPage}\r\n\r\n        case 'SET-TOTAL-CARDS-COUNT':\r\n            return {...state, totalCardsCount: action.totalCardsCount}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst SET_CARDS = 'SET-CARDS'\r\nconst SET_SORT_CARDS = 'SET-SORT-CARDS'\r\nconst SET_PACK_TITLE = 'SET-PACK-TITLE'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_ITEMS_PER_PAGE = 'SET-ITEMS-PER-PAGE'\r\nconst SET_TOTAL_CARDS_COUNT = 'SET-TOTAL-CARDS-COUNT'\r\n\r\nexport const setCardsAC = (cards: Array<CardType>) => (\r\n    {type: SET_CARDS, cards} as const\r\n)\r\nexport const setPackTitleAC = (title: string) => (\r\n    {type: SET_PACK_TITLE, title} as const\r\n)\r\nexport const setCurrentPageAC = (currentPage: number) => (\r\n    {type: SET_CURRENT_PAGE, currentPage} as const\r\n)\r\nexport const setItemsPerPageAC = (itemsPerPage: number) => (\r\n    {type: SET_ITEMS_PER_PAGE, itemsPerPage} as const\r\n)\r\nexport const setTotalCardsCountAC = (totalCardsCount: number) => (\r\n    {type: SET_TOTAL_CARDS_COUNT, totalCardsCount} as const\r\n)\r\nexport const setSortCardsAC = () => (\r\n    {type: SET_SORT_CARDS} as const\r\n)\r\n\r\n// Thunks\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    RootStateType,\r\n    unknown,\r\n    Action<string>>\r\n\r\nexport const getCardsTC = (packId: string, pagination = true):AppThunk =>\r\n    (dispatch, getState) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    const params = pagination? getState().pagination : {pageCount: 1000}\r\n    const sortCards = getState().cardsPage.params.sortCards\r\n    cardsAPI.getCards(packId, {...params, sortCards})\r\n        .then((response) => {\r\n            dispatch(setCardsAC(response.cards))\r\n            dispatch(setTotalCardsCountAC(response.cardsTotalCount))\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n            dispatch(setAuthTC())\r\n        })\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n\r\nexport const createCardTC = (packId: string):AppThunk => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.createCard({question: 'New Card', cardsPack_id: packId})\r\n        .then(() => dispatch(getCardsTC(packId)))\r\n        .catch(e => {\r\n            console.log(e)\r\n            dispatch(setAuthTC())\r\n        })\r\n        .finally(() => {dispatch(setAppStatusAC('idle'))})\r\n}\r\n\r\nexport const deleteCardTC = (packId: string, cardId: string, pagination = true):AppThunk => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.deleteCard(cardId)\r\n        .then(() => dispatch(getCardsTC(packId, pagination)))\r\n        .catch(e => {\r\n            console.log(e)\r\n            dispatch(setAuthTC())\r\n        })\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n// fix newName\r\nexport const updateCardTC = (packId: string, cardId: string, update?: string):AppThunk => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    cardsAPI.updateCard(cardId)\r\n        .then(() => dispatch(getCardsTC(packId)))\r\n        .catch(e => {\r\n            console.log(e)\r\n            dispatch(setAuthTC())\r\n        })\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}","import React from 'react';\r\nimport style from '../styles/CardsPage.module.css'\r\nimport {CardType} from '../../api/API';\r\nimport CardItem from './CardItem';\r\nimport SearchContainer from '../../common/Search/SearchContainer';\r\nimport PaginationContainer from '../../common/Pagination/PaginationContainer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {getCardsTC, setSortCardsAC} from '../../redux/cards-reducer';\r\n\r\ntype PacksPagePropsType = {\r\n    title: string\r\n    cards: Array<CardType>\r\n    packId: string\r\n    totalCardsCount: number\r\n    createCard(packId: string): void // fix args\r\n    deleteCard(packId: string, cardId: string): void\r\n    updateCard(packId: string, cardId: string): void\r\n}\r\n\r\nexport type AddCardFormStateType = {\r\n    value: string\r\n    error: string\r\n    hide: boolean\r\n    touched: boolean\r\n}\r\n\r\nfunction CardsPage(props: PacksPagePropsType) {\r\n    console.log('CardsPage called')\r\n\r\n    const dispatch = useDispatch()\r\n    const filter = useSelector((state: RootStateType): string => state.filterState.nameFilter)\r\n    const sort = useSelector((state: RootStateType): string => state.cardsPage.params.sortCards)\r\n\r\n    const setSort = () => {\r\n        dispatch(setSortCardsAC())\r\n        dispatch(getCardsTC(props.packId))\r\n    }\r\n\r\n    const cards = props.cards.filter(c => filter ? c.question.includes(filter) : true)\r\n        .map(c => {\r\n            return <CardItem {...c}\r\n                             key={c._id}\r\n                             deleteCallback={() => props.deleteCard(props.packId, c._id)}\r\n                             updateCallback={() => props.updateCard(props.packId, c._id)}\r\n            />\r\n        })\r\n\r\n    return (\r\n        <div className={style.cardsPageWrapper}>\r\n            <h1 className={style.pageTitle}>{props.title}</h1>\r\n            <div className={style.controlsContainer}>\r\n                <div style={{alignSelf: 'flex-start', marginBottom: '5px'}}>\r\n                    <SearchContainer placeholder={'Search'}/>\r\n                </div>\r\n                <div style={{alignSelf: 'flex-end', marginBottom: '5px'}}>\r\n                    <PaginationContainer totalItems={props.totalCardsCount}/>\r\n                </div>\r\n            </div>\r\n            <div className={style.table}>\r\n                <div className={style.tableHeader}>\r\n                    <div style={{width: '15%'}}>Question</div>\r\n                    <div style={{width: '10%'}}>Answer</div>\r\n                    <div style={{width: '15%'}}>\r\n                        <span className={`${style.sortSettings} ${style.activeSetting}`}\r\n                              onClick={setSort}>\r\n                            {`Grade ${sort === '1grade' ? '↑' : '↓'}`}\r\n                        </span></div>\r\n                    <div style={{width: '10%'}}>Updated</div>\r\n                    <div style={{width: '10%'}}>Created</div>\r\n                    <div style={{width: '15%'}}>\r\n                        <button onClick={() => props.createCard(props.packId)}>New card</button>\r\n                    </div>\r\n                    <div style={{width: '25%'}}/>\r\n                </div>\r\n                <ul>\r\n                    {cards}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardsPage;\r\n","import React, {useEffect} from 'react';\r\nimport CardsPage from './CardsPage';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {createCardTC, deleteCardTC, getCardsTC, updateCardTC} from '../../redux/cards-reducer';\r\n\r\ntype ParamsType = {\r\n    id: string | undefined\r\n    title: string | undefined\r\n}\r\n\r\nfunction CardsPageContainer() {\r\n    console.log('CardsPageContainer called')\r\n\r\n    const dispatch = useDispatch()\r\n    const appStatus = useSelector((state: RootStateType): string => state.appState.status)\r\n    const isLoggedIn = useSelector((state: RootStateType): boolean => state.auth.isLoggedIn)\r\n    const page = useSelector((state: RootStateType): number => state.pagination.page)\r\n    const pageCount = useSelector((state: RootStateType): number => state.pagination.pageCount)\r\n    const cards = useSelector((state: RootStateType) => state.cardsPage.cards)\r\n    const totalCardsCount = useSelector((state: RootStateType) => state.cardsPage.totalCardsCount)\r\n    const itemsOnPage = useSelector((state: RootStateType) => state.pagination.pageCount)\r\n\r\n    const params: ParamsType = useParams()\r\n    const packId = params.id ? params.id : ''\r\n    const title = params.title ? params.title : 'Pack'\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(packId))\r\n    }, [dispatch, packId, page, pageCount])\r\n\r\n    const pagesCount = Math.ceil(totalCardsCount / itemsOnPage)\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n\r\n    const createCard = (id: string) => { // fix args\r\n        dispatch(createCardTC(id))\r\n    }\r\n\r\n    const deleteCard = (packId: string, cardId: string) => {\r\n        dispatch(deleteCardTC(packId, cardId))\r\n    }\r\n\r\n    const updateCard = (packId: string, cardId: string) => {\r\n        dispatch(updateCardTC(packId, cardId))\r\n    }\r\n\r\n    return (\r\n        appStatus === 'idle' && !isLoggedIn\r\n            ? <Redirect to={'/login'}/>\r\n            : <CardsPage\r\n                title={title}\r\n                cards={cards}\r\n                packId={packId}\r\n                createCard={createCard}\r\n                deleteCard={deleteCard}\r\n                updateCard={updateCard}\r\n                totalCardsCount={totalCardsCount}\r\n            />\r\n    )\r\n}\r\n\r\nexport default CardsPageContainer;\r\n","import React, {CSSProperties, ReactChildren, ReactElement, ReactNode, useState} from 'react';\r\nimport Modal from \"../Modal\";\r\nimport InputMap, {IInputData} from \"./InputMap\";\r\n\r\n// export type AnswerType = { answer: string, value1?: string, value2?:string }\r\nexport type AnswersType = {\r\n    answer1: string\r\n    answer2?: string\r\n    answer3?: string\r\n}\r\n\r\nexport type ModalInputPropsType = {\r\n    show: boolean;\r\n    close: () => void;\r\n\r\n    inputData?: IInputData[];\r\n    modalText?: string\r\n    buttonTitle?: string\r\n    answers: AnswersType;\r\n    setAnswer?: (answers: AnswersType) => void;\r\n\r\n    inputContainerStyles?: CSSProperties;\r\n    inputStyles?: CSSProperties;\r\n    buttonStyles?: CSSProperties;\r\n    button?: ReactNode;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n    children?: string | ReactChildren | ReactElement | (string | ReactChildren | ReactElement)[];\r\n}\r\n\r\nfunction ModalInput2({\r\n                         inputData,\r\n                         modalText,\r\n                         // modalButtonTitle,\r\n                         answers,\r\n                         setAnswer = (answers) => {\r\n                         },\r\n\r\n                         inputContainerStyles,\r\n                         inputStyles,\r\n                         buttonStyles,\r\n                         button = 'OK',\r\n\r\n                         enableBackground,\r\n                         backgroundStyle,\r\n                         backgroundOnClick = () => {\r\n                         },\r\n\r\n                         width,\r\n                         height,\r\n                         modalStyle,\r\n                         modalOnClick = () => {\r\n                         },\r\n\r\n                         show,\r\n                         close,\r\n                         children,\r\n                     }: ModalInputPropsType) {\r\n    const [answerData, setAnswerData] = useState(answers);\r\n    const [saveInputs, setSaveInputs] = useState({\r\n        f: () => {\r\n        }\r\n    })\r\n\r\n    const successCloseModal = () => {\r\n        saveInputs.f();\r\n        // setAnswer(answerData || '');\r\n        setAnswer(answerData);\r\n        setSaveInputs({\r\n            f: () => {\r\n            }\r\n        }); // unsubscribe\r\n        close();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground}\r\n            backgroundOnClick={() => {\r\n                setAnswerData(answers);\r\n                backgroundOnClick()\r\n            }}\r\n            backgroundStyle={backgroundStyle}\r\n\r\n            width={width}\r\n            height={height}\r\n            modalOnClick={modalOnClick}\r\n            modalStyle={modalStyle}\r\n\r\n            show={show}\r\n        >\r\n            {modalText || 'question modal'}\r\n            {/*{children ? children : 'question Modal'}*/}\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-around',\r\n                    ...inputContainerStyles,\r\n                }}\r\n            >\r\n                {/*{answers !== undefined && (*/}\r\n                    <input\r\n                        value={answerData.answer1}\r\n                        style={{...inputStyles}}\r\n                        onChange={e => setAnswerData({...answerData, answer1: e.currentTarget.value})}\r\n                    />\r\n                {/*)}*/}\r\n                {answers?.answer2 && (\r\n                    <input\r\n                        value={answerData.answer2}\r\n                        style={{...inputStyles}}\r\n                        onChange={e => setAnswerData({...answerData, answer2: e.currentTarget.value})}\r\n                    />\r\n                )}\r\n\r\n                {answers?.answer3 && (\r\n                    <input\r\n                        value={answerData.answer3}\r\n                        style={{...inputStyles}}\r\n                        onChange={e => setAnswerData({...answerData, answer3: e.currentTarget.value})}\r\n                    />\r\n                )}\r\n\r\n            </div>\r\n            <button onClick={successCloseModal} style={{...buttonStyles}}>{button}</button>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalInput2;","import React, {useState} from 'react';\r\nimport ModalInput2, {AnswersType} from './ModalInput2';\r\n\r\n\r\n// export type AnswerType = { answer: string, value1?: string, value2?: string }\r\n\r\n\r\nexport type ModalInputContainerPropsType = {\r\n    buttonTitle?: string\r\n    modalText?: string\r\n    isMine: boolean\r\n    defaultAnswers: AnswersType\r\n    // answerCallback?: (answer: string[]) => void;\r\n    answerCallback?: (answers: AnswersType) => void;\r\n}\r\n\r\nfunction ModalInputContainer2(props: ModalInputContainerPropsType) {\r\n    // const {answer1, answer2, answer3} = props.defaultAnswers\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [answers, setAnswers] = useState(props.defaultAnswers );\r\n\r\n    // const [value1, setValue1] = useState('');\r\n    // const [value2, setValue2] = useState('');\r\n\r\n\r\n    const setAnswerHandler = ({answer1, answer2, answer3}: AnswersType) => {\r\n        setAnswers({answer1, answer2, answer3})\r\n        props.answerCallback && props.answerCallback({\r\n            answer1,\r\n            answer2,\r\n            answer3\r\n        })\r\n    }\r\n\r\n    const modalInputProps: any = {\r\n        show: show,\r\n        close: () => setShow(false),\r\n        modalText: props.modalText,\r\n        answers: answers,\r\n        setAnswer: setAnswerHandler,\r\n        enableBackground: true,\r\n        backgroundOnClick: () => setShow(false),\r\n        width: 300,\r\n        height: 200,\r\n    }\r\n\r\n    // if (props.inputsCount === 3) {\r\n    //     modalInputProps.inputData = [[value1, setValue1], [value2, setValue2]]\r\n    // } else if (props.inputsCount === 2) {\r\n    //     modalInputProps.inputData = [[value1, setValue1]]\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)}\r\n                >{props.buttonTitle || 'Modal Input'}\r\n                </button>\r\n                {/*{answers.answer1}{`-${answers?.answer2}`}{`-${answers?.answer3}`}*/}\r\n                {/*{answer}-{value1}-{value2}*/}\r\n                {/*{answer}*/}\r\n            </div>\r\n            <ModalInput2 {...modalInputProps}>\r\n            </ModalInput2>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalInputContainer2;","import React, {useEffect, useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from '../styles/PacksPage.module.css'\r\nimport {GetPacksResponseType} from '../../api/API';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport ModalQuestionContainer from '../../common/modals/question/ModalQuestionContainer';\r\nimport ModalInputContainer2 from '../../common/modals/input2/ModalInputContainer2';\r\n\r\ntype PackItemPropsType = {\r\n    deleteCallback(): void\r\n    updateCallback(name: string): void\r\n}\r\n\r\nfunction PackItem(props: GetPacksResponseType & PackItemPropsType) {\r\n\r\n    const myId = useSelector((state: RootStateType) => state.auth.profile?._id)\r\n    const itemIsMine = props.user_id === myId\r\n\r\n    let [delay, setDelay] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => setDelay(false), 100)\r\n    }, [delay])\r\n\r\n    const updated = new Date(props.updated)\r\n        .toLocaleDateString('en-UE', {hour12: false, hour: 'numeric', minute: 'numeric'});\r\n\r\n    const created = new Date(props.created)\r\n        .toLocaleDateString('en-UE', {hour12: false, hour: 'numeric', minute: 'numeric'});\r\n\r\n    const deleteHandler = (answer: boolean) => {\r\n        if (answer) {\r\n            props.deleteCallback()\r\n        }\r\n    }\r\n\r\n    const inputHandler = (value: any) => {\r\n        props.updateCallback(value.answer1)\r\n    }\r\n\r\n    return (\r\n        <li style={delay ? {} : {opacity: '1.0'}}>\r\n            <div className={`${style.packItem}${itemIsMine ? '' : (' ' + style.itemIsNotMine)}`}>\r\n                <div style={{width: '15%'}}>{props.name}</div>\r\n                <div style={{width: '10%'}}>{props.cardsCount}</div>\r\n                <div style={{width: '20%', fontSize: '12px', color: 'gray'}}>{props.user_name}</div>\r\n                <div style={{width: '10%', fontSize: '12px', paddingLeft: '12px'}}>{updated}</div>\r\n                <div style={{width: '10%', fontSize: '12px', paddingLeft: '12px'}}>{created}</div>\r\n                <div style={{width: '15%', display: 'flex', flexDirection: 'row'}}>\r\n                    <ModalQuestionContainer buttonTitle={'Delete'}\r\n                                            modalText={'Delete pack?'}\r\n                                            isMine={itemIsMine}\r\n                                            answerCallback={deleteHandler}/>\r\n                    <ModalInputContainer2 buttonTitle={'Update'}\r\n                                          modalText={'Enter new name'}\r\n                                          isMine={itemIsMine}\r\n                                          defaultAnswers={{\r\n                                              answer1: '',\r\n                                              // answer2: '',\r\n                                              // answer3: 'answer3'\r\n                                          }}\r\n                                          answerCallback={inputHandler}\r\n                    />\r\n                </div>\r\n                <div style={{width: '5%'}}>\r\n                    <NavLink to={`/cards/${props._id}/${encodeURI(props.name)}`}>cards</NavLink>\r\n                </div>\r\n                <div style={{width: '5%'}}>\r\n                    <NavLink\r\n                        to={`/learn/${props._id}/${encodeURI(props.name)}/${itemIsMine ? 1 : 0}`}>learn</NavLink>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PackItem;\r\n","import {GetPacksResponseType, packsAPI} from '../api/API';\r\nimport {setAppStatusAC} from './app-reducer';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {RootStateType} from './store';\r\nimport {Action} from 'redux';\r\nimport {setAuthTC} from './auth-reducer';\r\n\r\ntype PageStateType = {\r\n    packs: Array<GetPacksResponseType>\r\n    totalPacksCount: number\r\n    currentPage: number\r\n    params: GetPacksParamsType\r\n}\r\n\r\nexport type GetPacksParamsType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    page: number\r\n    user_id?: string\r\n    pageCount: number\r\n    sortPacks: '1created' | '0created' | '1updated' | '0updated'\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    packs: [],\r\n    totalPacksCount: 0,\r\n    currentPage: 1,\r\n    params: {\r\n        page: 1,\r\n        pageCount: 10,\r\n        sortPacks: '0updated',\r\n    }\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setSortPacksAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalPacksCountAC>\r\n\r\n\r\nexport const packsReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SET-PACKS':\r\n            return {...state, packs: action.packs}\r\n\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case 'SET-TOTAL-PACKS-COUNT':\r\n            return {...state, totalPacksCount: action.totalPacksCount}\r\n\r\n        case 'SET-SORT-PACKS':\r\n            return {...state,\r\n                params: {...state.params,\r\n                sortPacks: action.sort === 'created'\r\n                    ? state.params.sortPacks === '1created'\r\n                    ? '0created' : '1created'\r\n                    : state.params.sortPacks === '1updated'\r\n                    ? '0updated' : '1updated'\r\n                }}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst SET_PACKS = 'SET-PACKS'\r\nconst SET_SORT_PACKS = 'SET-SORT-PACKS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_PACKS_COUNT = 'SET-TOTAL-PACKS-COUNT'\r\n\r\nexport const setPacksAC = (packs: Array<GetPacksResponseType>) => (\r\n    {type: SET_PACKS, packs} as const\r\n)\r\nexport const setCurrentPageAC = (currentPage: number) => (\r\n    {type: SET_CURRENT_PAGE, currentPage} as const\r\n)\r\nexport const setTotalPacksCountAC = (totalPacksCount: number) => (\r\n    {type: SET_TOTAL_PACKS_COUNT, totalPacksCount} as const\r\n)\r\nexport const setSortPacksAC = (sort: 'updated' | 'created') => (\r\n    {type: SET_SORT_PACKS, sort} as const\r\n)\r\n\r\n// Thunks\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    RootStateType,\r\n    unknown,\r\n    Action<string>>\r\n\r\nexport const getPacksTC = (): AppThunk =>\r\n    (dispatch, getState) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const params = getState().pagination\r\n        const sortPacks = getState().packsPage.params.sortPacks\r\n        const packName = getState().filterState.nameFilter\r\n        let user_id = undefined\r\n        if (getState().filterState.onlyMyPacks) {\r\n            user_id = getState().auth.profile?._id\r\n        }\r\n        packsAPI.getPacks({...params, sortPacks, packName, user_id})\r\n            .then((response) => {\r\n                dispatch(setPacksAC(response.cardPacks))\r\n                dispatch(setTotalPacksCountAC(response.cardPacksTotalCount))\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                dispatch(setAuthTC())\r\n            })\r\n            .finally(() => dispatch(setAppStatusAC('idle')))\r\n    }\r\n\r\n        export const createPackTC = (name: string): AppThunk => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.createPack(name)\r\n        .then(() => dispatch(getPacksTC()))\r\n        .catch(e => {\r\n            console.log(e)\r\n            dispatch(setAuthTC())\r\n        })\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n\r\nexport const deletePackTC = (id: string): AppThunk => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.deletePack(id)\r\n        .then(() => dispatch(getPacksTC()))\r\n        .catch(e => {\r\n            console.log(e)\r\n            dispatch(setAuthTC())\r\n        })\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}\r\n// fix newName\r\nexport const updatePackTC = (id: string, newName: string = 'UPDATED Pack'): AppThunk => (dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    packsAPI.updatePack(id, newName)\r\n        .then(() => dispatch(getPacksTC()))\r\n        .catch(e => {\r\n            console.log(e)\r\n            dispatch(setAuthTC())\r\n        })\r\n        .finally(() => dispatch(setAppStatusAC('idle')))\r\n}","import React, {FormEvent, useEffect, useState} from 'react';\r\nimport style from '../styles/PacksPage.module.css'\r\nimport {GetPacksResponseType} from '../../api/API';\r\nimport PackItem from './PackItem';\r\nimport SuperInputText from '../../common/SuperInputText/SuperInputText';\r\nimport PaginationContainer from '../../common/Pagination/PaginationContainer';\r\nimport SearchContainer from '../../common/Search/SearchContainer';\r\nimport ModalInputContainer from '../../common/modals/input/ModalInputContainer';\r\nimport ModalInputContainer2 from '../../common/modals/input2/ModalInputContainer2';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getPacksTC, setSortPacksAC} from '../../redux/packs-reducer';\r\n\r\ntype PacksPagePropsType = {\r\n    packs: Array<GetPacksResponseType>\r\n    totalPacksCount: number\r\n    createPack(name: string): void\r\n    deletePack(id: string): void\r\n    updatePack(id: string, name: string): void\r\n}\r\n\r\nexport type AddPackFormStateType = {\r\n    value: string\r\n    error: string\r\n    hide: boolean\r\n    touched: boolean\r\n}\r\n\r\nfunction PacksPage(props: PacksPagePropsType) {\r\n    console.log('PacksPage called')\r\n\r\n    const dispatch = useDispatch()\r\n    let [formState, setFormState] =\r\n        useState<AddPackFormStateType>({value: '', error: '', hide: true, touched: false})\r\n\r\n    let [isMine, setIsMine] = useState(false)\r\n\r\n    const filter = useSelector((state: RootStateType): string => state.filterState.nameFilter)\r\n    const myId = useSelector((state: RootStateType) => state.auth.profile?._id)\r\n    const sort = useSelector((state: RootStateType) => state.packsPage.params.sortPacks)\r\n    const crSorting = sort.slice(1) === 'created'\r\n\r\n    const onChangeHandler = (value: string) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            value: value.trim(),\r\n        })\r\n    }\r\n    const onBlurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            touched: true\r\n        })\r\n    }\r\n    const toggleHideInput = (hide: boolean) => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            hide\r\n        })\r\n    }\r\n\r\n    let packs = props.packs.filter(p => filter ? p.name.includes(filter) : true)\r\n    if (isMine) packs = packs.filter(p => p.user_id === myId)\r\n    let packsRender = packs.map(p =>\r\n        <PackItem {...p}\r\n                  key={p._id}\r\n                  deleteCallback={() => props.deletePack(p._id)}\r\n                  updateCallback={(name: string) => props.updatePack(p._id, name)}\r\n        />)\r\n\r\n    useEffect(() => {\r\n        if (formState.touched && !formState.value) {\r\n            setFormState({...formState, error: 'Required'})\r\n        } else {\r\n            setFormState({...formState, error: ''})\r\n        }\r\n    }, [formState.value, formState.touched])\r\n\r\n    const onSubmitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        setFormState({\r\n            ...formState,\r\n            touched: true\r\n        })\r\n        if (formState.value) {\r\n            props.createPack(formState.value)\r\n            toggleHideInput(true)\r\n        } else if (formState.touched) {\r\n            toggleHideInput(true)\r\n        }\r\n    }\r\n\r\n    const setSort = (type: 'created' | 'updated') => {\r\n        dispatch(setSortPacksAC(type))\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    const onModalSubmitHandler = (value: any) => {\r\n        if (value.answer) {\r\n            props.createPack(value.answer)\r\n        }\r\n\r\n\r\n        if (value.value1) {\r\n            alert(value.value1)\r\n        }\r\n\r\n    }\r\n\r\n    const onModalSubmitHandler2 = (value: any) => {\r\n        if (value.answer1) {\r\n            props.createPack(value.answer1)\r\n        }\r\n\r\n        if (value.answer2) {\r\n            alert(value.answer2)\r\n        }\r\n\r\n    }\r\n\r\n    const handleIsMineOnChange = () => {\r\n        setIsMine(!isMine)\r\n    }\r\n\r\n    return (\r\n        <div className={style.packsPageWrapper}>\r\n            <h1 className={style.pageTitle}>Packs</h1>\r\n            <div className={style.controlsContainer}>\r\n                <div style={{alignSelf: 'flex-start', marginBottom: '5px'}}>\r\n                    <SearchContainer\r\n                        placeholder={'Pack name'}\r\n                    />\r\n                    <span style={{fontSize: '12px', marginLeft: '2px', color: 'gray'}}>Show mine</span>\r\n                </div>\r\n                <div style={{alignSelf: 'flex-end', marginBottom: '5px'}}>\r\n                    <PaginationContainer totalItems={props.totalPacksCount}/>\r\n                </div>\r\n            </div>\r\n            <div className={style.table}>\r\n                <div className={style.tableHeader}>\r\n                    <div style={{width: '15%'}}>Name</div>\r\n                    <div style={{width: '10%'}}>Cards count</div>\r\n                    <div style={{width: '20%'}}>User</div>\r\n                    <div style={{width: '10%'}}>\r\n                        <span className={`${style.sortSettings} ${!crSorting ? style.activeSetting : ''}`}\r\n                              onClick={() => setSort('updated')}>\r\n                            {`Updated ${sort === '1updated' ? '↑' : '↓'}`}\r\n                        </span>\r\n                    </div>\r\n                    <div style={{width: '10%', marginLeft: '12px'}}>\r\n                        <span className={`${style.sortSettings} ${crSorting ? style.activeSetting : ''}`}\r\n                              onClick={() => setSort('created')}>\r\n                            {`Created ${sort === '1created' ? '↑' : '↓'}`}\r\n                        </span>\r\n                    </div>\r\n                    <div style={{width: '15%'}}>\r\n                        {formState.hide\r\n                            ?\r\n                            <ModalInputContainer2 buttonTitle={'Add Pack'}\r\n                                                  modalText={'Enter new pack name'}\r\n                                                  isMine={isMine}\r\n                                                  defaultAnswers={{\r\n                                                      answer1: '',\r\n                                                      answer2: '',\r\n                                                      // answer3: 'answer3'\r\n                                                  }}\r\n                                                  answerCallback={onModalSubmitHandler2}\r\n                            />\r\n                            : <form className={style.inputBlock} onSubmit={onSubmitHandler}>\r\n                                <button className={style.addButton}\r\n                                        type='submit'>Add\r\n                                </button>\r\n                                <SuperInputText\r\n                                    value={formState.value}\r\n                                    error={formState.error}\r\n                                    onChangeText={onChangeHandler}\r\n                                    onBlur={onBlurHandler}\r\n                                    placeholder={'Pack name'}\r\n                                />\r\n                                <span onClick={() => toggleHideInput(true)}>x</span>\r\n                            </form>}\r\n                    </div>\r\n                    <div style={{width: '10%'}}/>\r\n                </div>\r\n                <ul>\r\n                    {packsRender}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PacksPage;\r\n","import React, {useEffect, useMemo} from 'react';\r\nimport PacksPage from './PacksPage';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {createPackTC, deletePackTC, getPacksTC, updatePackTC} from '../../redux/packs-reducer';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PaginationContainer from '../../common/Pagination/PaginationContainer';\r\n\r\n\r\nfunction PacksPageContainer() {\r\n    console.log('PacksPageContainer called')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: RootStateType): boolean => state.auth.isLoggedIn)\r\n    const appStatus = useSelector((state: RootStateType): string => state.appState.status)\r\n    const page = useSelector((state: RootStateType): number => state.pagination.page)\r\n    const pageCount = useSelector((state: RootStateType): number => state.pagination.pageCount)\r\n    const packNameFilter = useSelector((state: RootStateType) => state.filterState)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch, page, pageCount, packNameFilter.onlyMyPacks])\r\n\r\n    const packs = useSelector((state: RootStateType) => state.packsPage.packs)\r\n    const totalPacksCount = useSelector((state: RootStateType) => state.packsPage.totalPacksCount)\r\n    const itemsOnPage = useSelector((state: RootStateType) => state.pagination.pageCount)\r\n\r\n    const pagesCount = Math.ceil(totalPacksCount / itemsOnPage)\r\n    const pages = []; for (let i = 1; i <= pagesCount; i++) pages.push(i)\r\n\r\n    const createPack = (name: string) => {\r\n        dispatch(createPackTC(name))\r\n    }\r\n\r\n    const deletePack = (id: string) => {\r\n        dispatch(deletePackTC(id))\r\n    }\r\n\r\n    const updatePack = (id: string, name: string) => {\r\n        dispatch(updatePackTC(id, name))\r\n    }\r\n\r\n    return (\r\n        appStatus === 'idle' && !isLoggedIn\r\n            ? <Redirect to={'/login'}/>\r\n            : <PacksPage\r\n                packs={packs}\r\n                createPack={createPack}\r\n                deletePack={deletePack}\r\n                updatePack={updatePack}\r\n                totalPacksCount={totalPacksCount}\r\n            />\r\n    )\r\n}\r\n\r\nexport default PacksPageContainer;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from '../styles/Page404.module.css'\r\n\r\nfunction Page404() {\r\n    return (\r\n        <div className={style.page404}>\r\n            <h1>Page not found</h1>\r\n            <NavLink to={'/'}><span>Back to homepage</span></NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page404;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {CardType} from '../../api/API';\r\nimport style from '../styles/LearnPage.module.css'\r\nimport {useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype LearnPagePropsType = {\r\n    title: string\r\n    card: CardType\r\n    amount: number\r\n    index: number\r\n    smartMode: boolean\r\n    isMine: string\r\n    toggleMode(): void\r\n    getNextCard(): void\r\n    deleteCard(cardId: string): void\r\n    setGrade(card_id: string, grade: number): void\r\n}\r\n\r\nfunction LearnPage({title, card, isMine, amount, index, smartMode, toggleMode, getNextCard, deleteCard, setGrade}: LearnPagePropsType) {\r\n    console.log('LearnPage called')\r\n\r\n    const appStatus = useSelector((state: RootStateType): string => state.appState.status)\r\n    const isLoggedIn = useSelector((state: RootStateType): boolean => state.auth.isLoggedIn)\r\n\r\n    let [show, setShow] = useState(false)\r\n    let [answer, setAnswer] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setShow(false)\r\n        setAnswer(0)\r\n    }, [index])\r\n\r\n    const showHandler = () => setShow(!show)\r\n\r\n    const answerHandler = (e: React.MouseEvent) => {\r\n        const button = e.target as HTMLButtonElement\r\n        setAnswer(+button.value)\r\n        setGrade(card._id, +button.value)\r\n    }\r\n\r\n    const refreshCard = () => {\r\n        setAnswer(0)\r\n        setShow(s => !s)\r\n    }\r\n\r\n    const deleteHandler = () => deleteCard(card._id)\r\n\r\n    return (\r\n        appStatus === 'idle' && !isLoggedIn\r\n            ? <Redirect to={'/login'}/>\r\n            : <div className={style.pageContainer}>\r\n                <h1>{title}</h1>\r\n                {card && <h2 className={style.modeTitle}\r\n                             onClick={toggleMode}>\r\n                    <span style={{marginRight: '5px'}}>Smart random is</span>\r\n                    <span style={{color: smartMode ? 'CadetBlue' : 'Salmon'}}>{smartMode ? 'ON' : ' OFF'}</span>\r\n                </h2>}\r\n                <h2 className={`${card ? style.cardsCount : style.packEmpty}\r\n            ${!smartMode && index === amount ? style.lastCard : ''}`}>\r\n                    {card || appStatus !== 'idle' ? `${index}/${amount}` : 'Pack is empty'}\r\n                </h2>\r\n                {card &&\r\n                <div className={style.cardContainer}>\r\n                    <div className={style.card}>\r\n                        <span className={style.question}>{card.question}</span>\r\n                        {isMine === '1' &&\r\n                        <span className={style.delete} onClick={deleteHandler}>Delete card</span>}\r\n                        {show\r\n                            ? <div className={style.answerContainer}>\r\n                                <span className={style.answer}>{card.answer}</span>\r\n                                <div className={style.buttonsBlock}>\r\n                                    <button value={1} disabled={!!answer}\r\n                                            className={`${style.answerButton}${(answer === 1)\r\n                                                ? ' ' + style.highlightAnswer : ''}`}\r\n                                            style={(answer === 1) ? {border: '2px solid Maroon'} : {}}\r\n                                            onClick={answerHandler}>Не знал\r\n                                    </button>\r\n                                    <button value={2} disabled={!!answer}\r\n                                            className={`${style.answerButton}${(answer === 2)\r\n                                                ? ' ' + style.highlightAnswer : ''}`}\r\n                                            style={(answer === 2) ? {border: '2px solid Salmon'} : {}}\r\n                                            onClick={answerHandler}>Забыл\r\n                                    </button>\r\n                                    <button value={3} disabled={!!answer}\r\n                                            className={`${style.answerButton}${(answer === 3)\r\n                                                ? ' ' + style.highlightAnswer : ''}`}\r\n                                            style={(answer === 3) ? {border: '2px solid Orange'} : {}}\r\n                                            onClick={answerHandler}>Долго думал\r\n                                    </button>\r\n                                    <button value={4} disabled={!!answer}\r\n                                            className={`${style.answerButton}${(answer === 4)\r\n                                                ? ' ' + style.highlightAnswer : ''}`}\r\n                                            style={(answer === 4) ? {border: '2px solid CadetBlue'} : {}}\r\n                                            onClick={answerHandler}>Перепутал\r\n                                    </button>\r\n                                    <button value={5} disabled={!!answer}\r\n                                            className={`${style.answerButton}${(answer === 5)\r\n                                                ? ' ' + style.highlightAnswer : ''}`}\r\n                                            style={(answer === 5) ? {border: '2px solid LimeGreen'} : {}}\r\n                                            onClick={answerHandler}>Знал\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            : <button className={style.checkButton} onClick={showHandler}>Check</button>\r\n                        }\r\n                    </div>\r\n                    <button className={style.nextButton}\r\n                            disabled={amount === 1 && !answer}\r\n                            onClick={amount > 1 ? getNextCard : refreshCard}>\r\n                        <span>{amount > 1 ? 'Next' : 'Again?'}</span>\r\n                    </button>\r\n                </div>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LearnPage;\r\n","import {cardsAPI, CardType} from '../api/API';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {RootStateType} from './store';\r\nimport {Action} from 'redux';\r\nimport {setAppStatusAC} from './app-reducer';\r\nimport {setAuthTC} from './auth-reducer';\r\n\r\ntype PageStateType = {\r\n    packTitle: string\r\n    cards: Array<CardType>\r\n    cardId: string\r\n    grade: number\r\n    cardIndex: number\r\n}\r\n\r\nconst initialState: PageStateType = {\r\n    packTitle: 'Pack',\r\n    cards: [],\r\n    cardId: '',\r\n    grade: 0,\r\n    cardIndex: 0\r\n}\r\n\r\ntype ActionTypes =\r\n    | ReturnType<typeof updateCardGradeAC>\r\n\r\n\r\nexport const learnReducer = (state: PageStateType = initialState, action: ActionTypes): PageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'UPDATE-CARD-GRADE':\r\n            return {\r\n                ...state, cards: state.cards.map(\r\n                    c => c._id === action.cardId ? {...c, grade: action.grade} : c\r\n                )\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst UPDATE_CARD_GRADE = 'UPDATE-CARD-GRADE'\r\n\r\nexport const updateCardGradeAC = (cardId: string, grade: number) => (\r\n    {type: UPDATE_CARD_GRADE, cardId, grade} as const\r\n)\r\n\r\n// Thunks\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    RootStateType,\r\n    unknown,\r\n    Action<string>>\r\n\r\nexport const sendGradeTC = (card_id: string, grade: number): AppThunk =>\r\n    (dispatch) => {\r\n        dispatch(setAppStatusAC('sending'))\r\n        cardsAPI.sendGrade(card_id, grade)\r\n            .then((response) => {\r\n                dispatch(updateCardGradeAC(card_id, response.grade))\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                dispatch(setAuthTC())\r\n            })\r\n            .finally(() => dispatch(setAppStatusAC('idle')))\r\n    }","import React, {useEffect, useState} from 'react';\r\nimport LearnPage from './LearnPage';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../redux/store';\r\nimport {useParams} from 'react-router-dom';\r\nimport {deleteCardTC, getCardsTC, updateCardTC} from '../../redux/cards-reducer';\r\nimport {sendGradeTC} from '../../redux/learn-reducer';\r\n\r\ntype ParamsType = {\r\n    id: string | undefined\r\n    title: string | undefined\r\n    isMine: string | undefined\r\n}\r\n\r\nfunction LearnPageContainer() {\r\n    console.log('LearnPageContainer called')\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector((state: RootStateType): boolean => state.auth.isLoggedIn)\r\n    const params: ParamsType = useParams()\r\n    const title = params.title ? params.title : 'Pack'\r\n    const packId = params.id ? params.id : ''\r\n    const isMine = params.isMine? params.isMine : '0'\r\n    const cards = useSelector((state: RootStateType) => state.cardsPage.cards)\r\n    let [index, setIndex] = useState(0)\r\n    let [smartMode, setMode] = useState(false)\r\n    let card = cards[index]\r\n    // window.history.replaceState(null, '', `/#/learn/${title}`)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(packId, false))\r\n    }, [dispatch, packId])\r\n\r\n    const setGrade = (card_id: string, grade: number) => {\r\n        dispatch(sendGradeTC(card_id, grade))\r\n    }\r\n\r\n    const getNextSimple = () => setIndex(i => index + 1 >= cards.length? 0 : i + 1)\r\n\r\n    const getNextSmart = () => {\r\n        const sum = cards.reduce((acc, card) => acc + (6 - card.grade)**2, 0)\r\n        const rand = Math.random() * sum\r\n        const res = cards.reduce((acc: {sum: number, id: number}, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) ** 2\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }, {sum: 0, id: -1})\r\n        setIndex( res.id + 1)\r\n    }\r\n\r\n    const deleteCard = (cardId: string) => {\r\n        dispatch(deleteCardTC(packId, cardId,false))\r\n    }\r\n\r\n    return (\r\n        <LearnPage title={title}\r\n                   card={card}\r\n                   index={index + 1}\r\n                   isMine={isMine}\r\n                   amount={cards.length}\r\n                   smartMode={smartMode}\r\n                   toggleMode={() => setMode(m => !m)}\r\n                   getNextCard={smartMode? getNextSmart : getNextSimple}\r\n                   deleteCard={deleteCard}\r\n                   setGrade={setGrade}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LearnPageContainer;\r\n","import React, {useEffect} from 'react';\r\nimport style from './App.module.css';\r\nimport {HashRouter, Route, Switch, Redirect} from 'react-router-dom';\r\nimport Profile from './content/Profile/Profile';\r\nimport Registration from './content/Registration/Registration';\r\nimport {Navbar} from './common/Navbar';\r\nimport SuperInputsDemo from './content/SuperInputsDemo';\r\nimport LoginContainer from './content/Login/LoginContainer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport RecoverContainer from './content/Recover/RecoverContainer';\r\nimport NewPasswordContainer from './content/NewPassword/NewPasswordContainer';\r\nimport {setAuthTC} from './redux/auth-reducer';\r\nimport {RootStateType} from './redux/store';\r\nimport {Loader} from './common/loader/loader';\r\nimport RegistrationContainer from './content/Registration/RegistrationContainer';\r\nimport CardsPageContainer from './content/CardsPage/CardsPageContainer';\r\n\r\nimport PacksPageContainer from './content/PacksPage/PacksPageContainer';\r\nimport Page404 from \"./content/Page404/Page404\";\r\nimport LearnPageContainer from './content/LearnPage/LearnPageContainer';\r\nexport const DEV_MODE = true\r\nexport const DEFAULT_EMAIL = 'nya-admin@nya.nya'\r\nexport const DEFAULT_PASSWORD = '1qazxcvBG'\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n    const appStatus = useSelector((state: RootStateType) => state.appState.status)\r\n\r\n    useEffect(() => {\r\n        dispatch(setAuthTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n                {appStatus === 'loading' && <Loader/>}\r\n                <Navbar/>\r\n                <div className={style.content}>\r\n                    <Switch>\r\n                        <Route exact path={'/'} render={() => <Profile/>}/>\r\n                        <Route path='/login' render={() => <LoginContainer/>}/>\r\n                        <Route path='/registration2' render={() => <RegistrationContainer/>}/>\r\n                        <Route path='/profile' render={() => <Profile/>}/>\r\n                        <Route path='/recover' render={() => <RecoverContainer/>}/>\r\n                        <Route path='/set-new-password/:token?' render={() => <NewPasswordContainer/>}/>\r\n                        <Route path='/packs/' render={() => <PacksPageContainer/>}/>\r\n                        <Route path='/cards/:id?/:title?' render={() => <CardsPageContainer/>}/>\r\n                        <Route path='/learn/:id?/:title?/:isMine?' render={() => <LearnPageContainer/>}/>\r\n                        <Route path='/demo' render={() => <SuperInputsDemo/>}/>\r\n\r\n                        <Route path={'/404'} render={() => <Page404/>}/>\r\n                        <Redirect from={'*'} to={'/404'}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {authReducer} from './auth-reducer';\r\nimport {recoverReducer} from './recover-reducer';\r\nimport {registrationReducer} from './registration-reducer';\r\nimport {appReducer} from './app-reducer';\r\nimport {searchReducer} from \"./search-reducer\";\r\nimport {paginationReducer} from \"./pagination-reducer\";\r\nimport {packsReducer} from './packs-reducer';\r\nimport {cardsReducer} from './cards-reducer';\r\nimport {learnReducer} from './learn-reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    appState: appReducer,\r\n    auth: authReducer,\r\n    pageRecover: recoverReducer,\r\n    pageRegistration: registrationReducer,\r\n    filterState: searchReducer,\r\n    pagination: paginationReducer,\r\n    packsPage: packsReducer,\r\n    cardsPage: cardsReducer,\r\n    learnPage: learnReducer\r\n})\r\n\r\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n// вариант для работы с расширением (хрома) redux devtools:\r\n// @ts-ignore\r\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsPageWrapper\":\"PacksPage_packsPageWrapper__3L10y\",\"pageTitle\":\"PacksPage_pageTitle__3u7Ym\",\"controlsContainer\":\"PacksPage_controlsContainer__1tliG\",\"table\":\"PacksPage_table__2o7Vh\",\"sortSettings\":\"PacksPage_sortSettings__3ga0l\",\"activeSetting\":\"PacksPage_activeSetting__ehPrI\",\"tableHeader\":\"PacksPage_tableHeader__1YVD1\",\"packItem\":\"PacksPage_packItem__2Kc7J\",\"inputBlock\":\"PacksPage_inputBlock__jV9s_\",\"addButton\":\"PacksPage_addButton__WHXpF\",\"itemIsNotMine\":\"PacksPage_itemIsNotMine__3-65N\"};"],"sourceRoot":""}